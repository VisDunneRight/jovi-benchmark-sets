# Datasets in use

The following chart shows how many times we found a dataset being used in the papers we collected. It excludes custom edits to the datasets, which are discussed later in this document.

```{ojs}
//| echo: false
{ 
  let d = []
  
  let allbenchmarkdatasets = [...new Set(literature.map(l => l["Dataset tag relations"].split(",").map(a => a.split("(")[0].trim())).flat())].filter(a => a != "")
  
  allbenchmarkdatasets = allbenchmarkdatasets.filter(b => !b.includes("Custom"))
  allbenchmarkdatasets = allbenchmarkdatasets.slice(0, 20)

  for (let dataset of allbenchmarkdatasets){
    let literature_entries_with_this_dataset = literature.filter(l => l["Dataset tag relations"].includes(dataset))

    d.push({"dataset": dataset, "count": literature_entries_with_this_dataset.length})
  }
  
  return Plot.plot({
    color: {
      // legend: true,
      // type: "categorical",
      // domain: d3.range(10).map((d, i) => `Category ${i + 1}`),
      range: ["steelblue"],
      // scheme: "Tableau10" // use the "accent" scheme
    },
    y: {
      // tickFormat: "s"
    },
    marks: [
      Plot.barX(d, {x: "count", y: "dataset", fill: "dataset", inset: 2, sort: {y: "x", reverse: true}}),
      Plot.axisY({label: null, lineWidth: 12, marginLeft: 150}),
    ]
  })
}
```

In the data we collected, the most used dataset is Rome-Lib, followed by assorted collaboration networks (which in many cases refers to datasets of academic collaborations such as dblp or vispubdata). The third most used dataset is from C.Walshaw - it is important to note that the Walshaw dataset is available as part of other collections - for instance, its graphs are found in SNAP. However, during the collection process, we preferred giving precedence to how the authors reported their own information. Thus, if the authors claimed the data was from the Walshaw collection, we reported it as such.

<!-- We deem the popularity of Rome-Lib to be due to its simplicity, versatility, and most importantly the fact that it is linked on graphdrawing.org and offered as a benchmark dataset there. This is also true for the North DAGs. -->

In the following sections, the reader will find details about the classifications and datasets in detail. Each dataset gets a dedicated, collapsible section, that contains the following information:
- A **sparkline** visualization is shown in case the dataset contains multiple graphs, illustrating the distribution of graph sizes (in nodes) in the graphs in the dataset.


## Classification of the Datasets

We classified the datasets in different categories, based on their origins or amount of graphs contained in them:

```{ojs}
//| echo: false
{ 
  let d = []
  
  let collection_type = benchmark_datasets.map(a => a["Type of Collection"]);

  for (let c of [... new Set(collection_type)]){
    if (c == "Skip" || c == "Missed it") continue;
    let count = collection_type.filter(a => a == c).length;
    if (c.includes("No report")) c = "Established Network Repository";
    d.push({"collection_type": c, "count": count})
  }
  
  return Plot.plot({
    color: {
      // legend: true,
      // type: "categorical",
      // domain: d3.range(10).map((d, i) => `Category ${i + 1}`),
      scheme: "Tableau10" // use the "accent" scheme
    },
    y: {
      // tickFormat: "s"
    },
    marks: [
      Plot.barX(d, {x: "count", y: "collection_type", fill: "collection_type", inset: 2, sort: {y: "x", reverse: true}}),
      Plot.axisY({label: null, lineWidth: 12, marginLeft: 150}),
    ]
  })
}
```

### Uniform Benchmark datasets

**Uniform Benchmark** datasets are standalone widely used collections of graphs featuring uniform characteristics - usually simple, generic graphs, often used in evaluations that run over thousands of graphs to report average completion times, or other experiments where the reported metrics are usually aggregated.

The first of these collapsible sections is shown already expanded, to give an example of the content that can be found in each of them. The content is generated dynamically based on the data we collected. 


<!-- [http://graphdrawing.org describes it as: “Test suites of directed and undirected graphs from the http://www.dia.uniroma3.it/~gdt/ homepage (also known as the Rome Graphs)”.  -->

<!-- ,  and it is used in a large number of papers: [@Buchheim2008] [@chimani2010] [@chimani2006] [@diBartolomeo2022b] [@Clancy2019] [@DiBattista1997b] [@chimani2016b] [@Chimani2008] [@Bekos2018] [@Demel2018] [@Heinsohn2018] [@Kindermann2018] [@chimani2016] [@Chimani2012] [@Gansner2006] [@Gutwenger2004] [@klammler2018] [@Niedermann2020] [@Giovannangeli2021] [@Chimani2021]. -->

<a name="Rome-Lib"></a>

::: {.callout-note title="Rome-Lib" collapse=false appearance="minimal"}

Rome-Lib is, as previously discussed, the most common benchmark dataset, due to its already established popularity, its ease of use and access, and the many properties that are already known about it. 
It was first introduced in [@DiBattista1997b] and presented in their paper ”An experimental comparison of four graph drawing algorithms”. Mostly “real” networks such as software companies, government, software engineering books, database design, and journal articles on visualization. Originally sent as an extended abstract to Computational Geometry in 1995 [@DiBattista1995]. 
It contains exclusively <span class="pill-tag" style="background-color: rgb(217, 115, 13)">generic</span> graphs (e.g., undirected, non-layered, without pre-established clusters...), although some of the research that uses it enhances with additional attributes (such as performing a rank assignment step). 
Information about optimal crossings can be found as part of [WebCompute](#WebCompute).

<!-- ```{ojs}
//| echo: false

make_sparkline("Rome-Lib")
```

<div id="named-list-Rome-Lib" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Originally found at: </b><a href="http://www.graphdrawing.org/data.html">http://www.graphdrawing.org/data.html</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d947f91101aa0dc66a0c4d" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96db0803e0c0cb7558c0f" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971aa4cf748115a055897" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90ec4803e0c0b00558bc1" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>11534 graphs, 10 to 100 nodes, 9 to 158 edges </div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@DiBattista1997b]</div><div class="col-8">An experimental comparison of four graph drawing algorithms</div></div><div class="row"><div class="col-4">[@DiBattista1995]</div><div class="col-8">An experimental comparison of three graph drawing algorithms (extended abstract)</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@Buchheim2008]</div><div class="col-4">A branch-and-cut approach to the crossing number problem</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@chimani2010]</div><div class="col-4">Layer-Free Upward Crossing Minimization</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">directed edges</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><div class="row"><div class="col-4">[@chimani2006]</div><div class="col-4">Experiments on Exact Crossing Minimization Using Column Generation</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@diBartolomeo2022b]</div><div class="col-4">Stratisfimal Layout: A modular optimization model for laying out layered node-link network visualizations</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(11, 110, 153);">clusters (pre-existing)</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(11, 110, 153);">compound graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><div class="row"><div class="col-4">[@klammler2018]</div><div class="col-4">Aesthetic Discrimination of Graph Layouts</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@Chimani2008]</div><div class="col-4">A New Approach to Exact Crossing
Minimization</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@Gansner2006]</div><div class="col-4">Improved circular layouts</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">circular</div></div></div><div class="row"><div class="col-4"></div><div class="col-4">Deep Neural Network for DrawiNg
Networks</div><div class="col-4"></div></div><div class="row"><div class="col-4">[@Gutwenger2004]</div><div class="col-4">An Experimental Study of Crossing
Minimization Heuristics</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@DiBattista1997b]</div><div class="col-4">An experimental comparison of four graph drawing algorithms</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@chimani2016]</div><div class="col-4">A Note on the Practicality of Maximal Planar Subgraph Algorithms</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">planar</div></div></div><div class="row"><div class="col-4">[@Kindermann2018]</div><div class="col-4">Experimental Analysis of the Accessibility of Drawings with Few Segments</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">sparse</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">trees</div></div></div><div class="row"><div class="col-4">[@Heinsohn2018]</div><div class="col-4">An Interactive Tool to Explore and Improve the Ply Number of Drawings</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@Demel2018]</div><div class="col-4">A Greedy Heuristic for Crossing-Angle Maximization</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@Bekos2018]</div><div class="col-4">A Heuristic Approach Towards Drawings of Graphs with High Crossing Resolution</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@Niedermann2020]</div><div class="col-4">An Integer-Linear Program
for Bend-Minimization in Ortho-Radial
Drawings</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">ortho</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">ortho-radial</div></div></div><div class="row"><div class="col-4">[@Chimani2021]</div><div class="col-4">Star-Struck by Fixed Embeddings:
Modern Crossing Number Heuristics</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@Clancy2019]</div><div class="col-4">An effective crossing minimisation heuristic based on star insertion</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@Chimani2012]</div><div class="col-4">Advances in the Planarization Method: Effective Multiple Edge Insertions</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@chimani2016b]</div><div class="col-4">An ILP-based Proof System for the Crossing
Number Problem</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><br>


### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Rome-Lib%20c2f20984de724f4c89764b0bc494e99e/four_in_one.svg' width='80%'></div>

### Descriptions from Literature

From “[A branch-and-cut approach to the crossing number problem](https://doi.org/10.1016/j.disopt.2007.05.006)”:

> To test the performance of our new algorithm, we used a benchmark set of graphs of the University of Rome III, introduced in [11]. The set contains 11 389 graphs that consist of 10 to 100 nodes and 9 to 158 edges. These graphs were generated from a core set of 112 “real life” graphs used in database design and software engineering applications. Most of the graphs are sparse, which is a common property in most application areas of automatic graph drawing. The average ratio between the number of edges and the number of nodes of the graphs from the benchmark set is about 1.35.

From “[Layer-free upward crossing minimization](https://doi.org/10.1145/1671970.1671975)”:

> The Rome graphs [Di Battista et al. 1997] are a widely used benchmark set in graph drawing, obtained from a basic set of 112 real-world graphs. It contains 11,528 instances with 10 through 100 nodes and 9 through 158 edges. Although the graphs are originally undirected, they have been used as directed graphs—by artificially directing the edges according to the node order given in the input files—for showing the performance of the mixed-upward planarization approach [Eiglsperger et al. 2003]. In this case, all edges are directed and the graphs are acyclic; hence, the mixed-upward planarization approach turns into an upward planarization method.

From “[A New Approach to Exact Crossing Minimization](https://doi.org/10.1007/978-3-540-87744-8_24)”:

> We say graphs are trivial, if they are planar or if the heuristic achieves a planarization with only one crossing, as in these cases we need not prove optimality. The Rome library contains 7172 non-trivial graphs.

From “[An Experimental Comparison of Four Graph Drawing Algorithms](https://doi.org/10.1016/s0925-7721(96)00005-3)”

> Our test graph generation strategy is as follows. First, we have focused on the important application area of database and software visualization, where Entity-Relationship diagrams and Data-Flow diagrams are usually displayed with orthogonal drawings. Second, we have collected 112 "real life" graphs with number of vertices between 10 and 100, from now on called core graphs, from the following sources:

> • 54% of the graphs have been obtained from major Italian software companies (especially from Database Informatica) and large government organization (including the Italian Internal Revenue Service and the Italian National Advisory Council for Computer Applications in the Government (Autorita’ per l'Informatica nella Pubblica Amministrazione));
• 33% of the graphs were taken from well-known reference books in software engineering [18] and database design [1], and from journal articles on software visualization in the recent issues of Information Systems and the IEEE Transactions on Software Engineering;
• 13% of the graphs were extracted from theses in software and database visualization written by students at the University of Rome "La Sapienza".

> Our approach is based on the following scheme. We defined several primitive operations for updating graphs, which correspond to the typical operations performed by designers of Entity-Relationship and Data-Flow Diagrams, and attributed a certain probability to each of them. More specifically, the updating primitives we have used are the following: InsertEdge, which inserts a new edge between two existing vertices; DeleteEdge, which deletes an existing edge; InsertVertex, which splits an existing edge into two edges by inserting a new vertex; DeleteVertex, which deletes a vertex and all its incident edges; and MakeVertex, which creates a new vertex and connects it to a subset of vertices. The test graphs were then generated in several iterations starting from the core graphs by applying random sequences of operations with a "genetic" mechanism. Namely, at each iteration a new set of test graphs was obtained by applying a random sequence of operations to the current test set. Each new graph was then evaluated for "suitability", and those found not suitable were discarded. The probability of each primitive operation was varied at the end of each iteration. The evaluation of the suitability of the generated graphs was conducted using both objective and subjective analyses. The objective analysis consisted of determining whether the new graph had similar structural properties with respect to the core graph it was derived from. We have taken into account parameters like the average ratio between number of vertices and number of edges and the average number of biconnected components. The subjective analysis consisted in a visual inspection of the new graph and an assessment by expert users of Entity-Relationship and Data-Flow diagrams of its similarity to a "real-life" diagram. For obvious reasons, the subjective analysis has been done on a randomly selected subset of the graphs.

### Example Figures

From ”[An Experimental Comparison of Four Graph Drawing Algorithms](https://doi.org/10.1016/s0925-7721(96)00005-3)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Rome-Lib%20c2f20984de724f4c89764b0bc494e99e/Untitled.png' width='80%'></div>

From “[Experimental Analysis of the Accessibility of Drawings with Few Segments](https://doi.org/10.1007/978-3-319-73915-1_5)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Rome-Lib%20c2f20984de724f4c89764b0bc494e99e/Untitled%201.png' width='80%'></div>

From: [Deep Neural Network for DrawiNg Networks, (DNN)2](https://link.springer.com/chapter/10.1007/978-3-030-92931-2_27):

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Rome-Lib%20c2f20984de724f4c89764b0bc494e99e/Untitled%202.png' width='80%'></div>

**Fig 5.**  Layout examples for (DNN)^2, (DNN)^2, tsNET∗ and S_GD^2.

::: 

The following collections, together with Rome-Lib, can be easily accessed from the homepage of the [Graph Drawing Conference](http://www.graphdrawing.org/data.html) website, and are therefore well known and widely used.
<!-- AT&T is used in [@barth2002] [@DIBATTISTA2000] [@Jabrayilov2016] [@Chimani2012] [@Hachul2006] [@Hachul2005] [@Mallach2019] [@Jnger2018] [@hacul2005] [@welch2017] (and referred as AT&T), while the papers that use it but refer to it as North DAGs are [@chimani2010] [@chimani2016b] [@Demel2018] [@Binucci2016] [@Regg2016] [@chimani2016] [@klammler2018] [@Chimani2021] [@binucci2022]. -->

<a name="ATT"></a>

::: {.callout-note title="AT&T" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("ATT")
```

<div id="named-list-ATT" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

Originally collected by Stephen North at AT&amp;T Bell Labs (see the descriptions from literature section below for more information). The original link from 1995 is broken: <a href="ftp://ftp.research.att.com/dist/drawdag. ">ftp://ftp.research.att.com/dist/drawdag.</a>
Di Battista et al. modified the dataset by removing isomorphic graphs, connecting disconnected graphs, and removing cycles. Same as North DAG collection.
It contains <span class="pill-tag pill-tag-directed" style="background-color: rgb(217, 115, 13)">directed</span> and <span class="pill-tag pill-tag-acyclic">acyclic graphs.

 <div><b>Originally found at: </b><a href="http://www.graphdrawing.org/data.html">http://www.graphdrawing.org/data.html</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d949574cf748107605564e" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96e3b1101aa0ea66a0c45" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970d31101aa0ea36a0cb0" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e87803e0c0b04558c1f" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>1277 graphs, 10 to 100 nodes, 9 to 241 edges</div><br>
<div><b>Origin paper: </b></div><div><a href="https://doi.org/10.1142/S0218195900000358">[@DIBATTISTA2000]</a> &nbsp; <a style="cursor: pointer; text-decoration: underline; color: rgba(var(--bs-link-color-rgb)" onclick="citation(8)"></a> &nbsp;Drawing Directed Acyclic Graphs: An Experimental Study</div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@Hachul2005]</div><div class="col-4">Drawing Large Graphs with a Potential-Field-Based Multilevel Algorithm</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@Hachul2006]</div><div class="col-4">An Experimental Comparison of Fast Algorithms for Drawing General Large Graphs</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4"></div><div class="col-4">Large-Graph Layout with the Fast Multipole Multilevel Method</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@Jabrayilov2016]</div><div class="col-4">Compact Layered Drawings of General Directed Graphs</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">directed edges</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><div class="row"><div class="col-4">[@Jnger2018]</div><div class="col-4">A Flow Formulation for Horizontal Coordinate Assignment with Prescribed Width</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">dag</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(11, 110, 153);">hierarchical</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><div class="row"><div class="col-4">[@Mallach2019]</div><div class="col-4">A Natural Quadratic Approach to the Generalized Graph Layering Problem</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><div class="row"><div class="col-4">[@Chimani2012]</div><div class="col-4">Advances in the Planarization Method: Effective Multiple Edge Insertions</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@barth2002]</div><div class="col-4">Simple and Efficient Bilayer Cross Counting</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">bipartite</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div></div></div><div class="row"><div class="col-4">[@DIBATTISTA2000]</div><div class="col-4">Drawing Directed Acyclic Graphs: An Experimental Study</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">directed edges</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><div class="row"><div class="col-4">[@welch2017]</div><div class="col-4">Measuring Symmetry in Drawings of Graphs</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><br>


### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/AT&T%20e86f130c42344169a9d75a61abc7e487/four_in_one.svg' width='80%'></div>

### Descriptions from Literature

From “[Drawing Directed Acyclic Graphs: An Experimental Study](https://doi.org/10.1142/s0218195900000358)”:

> The experimental study was performed on two different sets of DAGs, both with a strong connection to "real-life" applications. We considered two typical contexts where DAGs play a fundamental role, namely software engineering and project planning.

> The first set of test DAGs are what we call the North DAGs. They are obtained from a collection of directed graphs [28], that North collected at AT\&T Bell Labs by running for two years *Draw DAG*, an e-mail graph drawing service that accepts directed graphs formatted as e-mail messages and returns messages with the corresponding drawings [27].

> Originally, the North DAGs consisted of 5114 directed graphs, whose number of vertices varied in the range *1 … 7602*. However, the density of the directed graphs with a number of vertices that did not fall in the range *10 … 100* was very low (see also the statistics in [28]); since such directed graphs represent a very sparse statistical population we decided to discard them. Then we noted that many directed graphs were isomorphic; since the vertices of the directed graphs have labels associated with them, the problem is tractable. For each isomorphism class, we kept only one representative directed graph. Also, we deleted the directed graphs where subgraphs were specified as clusters, to be drawn in their own distinct rectangular region of the layout, because constrained algorithms are beyond the scope of this study. This filtering left us with 1277 directed graphs.

> Still, 491 directed graphs were not connected and this was a problem for running algorithms implemented in *G D W* (they assume input directed graphs to be connected). Instead of discarding the directed graphs, we followed a more practical approach, by randomly adding a minimum set of directed edges that makes each directed graph connected. Finally, we made the directed graph acyclic, where necessary, by applying some heuristics for inverting the direction of a small subset of edges.

> We then ran a first set of experiments and produced the statistics by grouping the DAGs by number of vertices. Although the comparison among the algorithms looked consistent (the produced plots never oddly overlapped), each single plot was not satisfactory, because it showed peaks and valleys. We went back to study the test suite and observed that grouping them by number of vertices was not the best approach. In fact, the North DAGs come from very heterogeneous sources, mainly representing different phases of various software engineering projects; as a result, directed graphs with more or less the same number of vertices may be either very dense or very sparse.

> Since most of the analyzed quality measures strongly depend on the number of edges of the DAG (e.g. area, number of bends, and number of crossings), we decided that a better approach was to group the DAGs by number of edges. After some tests, we clustered the DAGs into nine groups, each with at least 40 DAGs, so that the number of edges in the DAGs belonging to group *i, 1 ≤ i ≤ 9*, is in the range *10 i … 10 i+9* (see Fig. 3). The resulting test suite consists of 1158 DAGs, each with edges in the range *10 … 99*.

From “[Layer-Free Upward Crossing Minimization](https://doi.org/10.1145/1671970.1671975)”:

> *North DAGs.* The North DAGs have been introduced in an experimental comparison of algorithms for drawing DAGs [Di Battista et al. 2000]. The benchmark set contains 1,158 DAGs collected by Stephen North, which were slightly modified by Di Battista et al. The graphs are grouped into nine sets, where set *i* contains graphs with *10 i* to *10 i+9* arcs for *i=1, …, 9*.

### Example Figures

From “[Drawing Directed Acyclic Graphs: An Experimental Study](https://doi.org/10.1142/s0218195900000358)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/AT&T%20e86f130c42344169a9d75a61abc7e487/Untitled.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/AT&T%20e86f130c42344169a9d75a61abc7e487/Untitled%201.png' width='80%'></div>

From “[A Natural Quadratic Approach to the Generalized Graph Layering Problem](https://doi.org/10.1007/978-3-030-35802-0_40)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/AT&T%20e86f130c42344169a9d75a61abc7e487/Screen_Shot_2023-08-09_at_4.26.57_PM.png' width='80%'></div>

From “[A Flow Formulation for Horizontal Coordinate Assignment with Prescribed Width](https://doi.org/10.1007/978-3-030-04414-5_13)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/AT&T%20e86f130c42344169a9d75a61abc7e487/Screen_Shot_2023-08-09_at_4.24.19_PM.png' width='80%'></div>

::: 

<a name="North_DAGs"></a>

::: {.callout-note title="North DAGs" collapse-id="North_DAGs" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("North_DAGs")
```

<div id="named-list-North_DAGs" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

This is the same collection as AT&amp;T, but referred to as North DAGs in the papers we analyzed. We kept the two collections separate, based on how they are referred to in the papers we collected.

<div><b>Originally found at: </b>See AT&amp;T</div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d949574cf748107605564e" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96e3b1101aa0ea66a0c45" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970d31101aa0ea36a0cb0" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e87803e0c0b04558c1f" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>See AT&amp;T</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@DIBATTISTA2000]</div><div class="col-8">Drawing Directed Acyclic Graphs: An Experimental Study</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@chimani2010]</div><div class="col-4">Layer-Free Upward Crossing Minimization</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">directed edges</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><div class="row"><div class="col-4">[@chimani2016]</div><div class="col-4">A Note on the Practicality of Maximal Planar Subgraph Algorithms</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">planar</div></div></div><div class="row"><div class="col-4">[@Regg2016]</div><div class="col-4">A Generalization of the Directed Graph Layering Problem</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">directed edges</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><div class="row"><div class="col-4">[@Demel2018]</div><div class="col-4">A Greedy Heuristic for Crossing-Angle Maximization</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@Chimani2021]</div><div class="col-4">Star-Struck by Fixed Embeddings:
Modern Crossing Number Heuristics</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@chimani2016b]</div><div class="col-4">An ILP-based Proof System for the Crossing
Number Problem</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@DIBATTISTA2000]</div><div class="col-4">Drawing Directed Acyclic Graphs: An Experimental Study</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">directed edges</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><div class="row"><div class="col-4">[@Binucci2016]</div><div class="col-4">Placing Arrows in Directed Graph Drawings</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">directed edges</div></div></div><div class="row"><div class="col-4">[@klammler2018]</div><div class="col-4">Aesthetic Discrimination of Graph Layouts</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@binucci2022]</div><div class="col-4">Placing Arrows in Directed Graph Layouts: Algorithms and Experiments</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">directed edges</div></div></div><br>


### Descriptions from Literature

From “[Layer-Free Upward Crossing Minimization](https://doi.org/10.1145/1671970.1671975)”:

**North DAGs.** The North DAGs have been introduced in an experimental comparison of algorithms for drawing DAGs [Di Battista et al. 2000]. The benchmark set contains 1,158 DAGs collected by Stephen North, which were slightly modified by Di Battista et al. The graphs are grouped into nine sets, where set $i$ contains graphs with $10 i$ to $10 i+9$ arcs for $i=1, \ldots, 9$.

<!-- === STOP RENDERING ===

is this the AT&T collection? [http://www.graphdrawing.org/data/](http://www.graphdrawing.org/data/)

from [Drawing Directed Acyclic Graphs: An Experimental Study](../Benchmark%20sets%200cc6b5e454304aec98f3b59b1a720476/Literature%20ad87f14e7097454fb2f784e2c8a2797a/Literature%20-%20Algorithm%2012e01bfc60a84007aa7d2d34293e123d/Drawing%20Directed%20Acyclic%20Graphs%20An%20Experimental%20St%201677531652194663b7fdf25025c61cc6.md) 

 

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/North%20DAGs%20a58f7143ef524c8a8c737df90162d3fb/Untitled.png' width='80%'></div>

from [Layer-Free Upward Crossing Minimization](../Benchmark%20sets%200cc6b5e454304aec98f3b59b1a720476/Literature%20ad87f14e7097454fb2f784e2c8a2797a/Literature%20-%20Algorithm%2012e01bfc60a84007aa7d2d34293e123d/Layer-Free%20Upward%20Crossing%20Minimization%20676f8a507ff343b5ae83c34446796fb5.md) 

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/North%20DAGs%20a58f7143ef524c8a8c737df90162d3fb/Untitled%201.png' width='80%'></div> -->

::: 

::: {.callout-note title="RandDAG or DAGMar" collapse=true collapse-id="RandDAG" appearance="minimal"}

The randDAG collection concludes the collections that can be easily accessed from graphdrawing.org. http://[graphdrawing.org](http://graphdrawing.org) highlights the DAGmar graph generator, and provides a benchmark set of randomly generated directed acyclic graphs. While not explicit, it is implied this benchmark comes from the DAGmar generator. The collection is uniformly sampled from set of level graphs with certain graph parameters, such as number of nodes and number of edges. These graphs have no particular features, thus they are classified as <span class="pill-tag" style="background-color: rgb(217, 115, 13)">generic</span>.

<!-- ```{ojs}
//| echo: false

make_sparkline("RandDAG")
```

<div id="named-list-RandDAG" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Originally found at: </b><a href="http://www.graphdrawing.org/data.html">http://www.graphdrawing.org/data.html</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948061101aa0dc66a0c55" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96dec94a6be112512e706" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d97088803e0c0cb6558d7e" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90eff803e0c0b04558ca3" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>10-100 nodes, 15-167 edges</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@Bachmaier_Gleißner_Hofmeier_2012]</div><div class="col-8">DAGmar: Library for DAGs</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@klammler2018]</div><div class="col-4">Aesthetic Discrimination of Graph Layouts</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><br>

### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/RandDAG%2054b6ed8fdecb4256b2cca6298f09965e/four_in_one.svg' width='80%'></div>

### Descriptions from the Literature

From “[Aesthetic Discrimination of Graph Layouts](https://link.springer.com/chapter/10.1007/978-3-030-04414-5_12)”:

> We have assembled such a dataset using two types of sources. First, we used the collections of the well-known graph archives ROME, NORTH and RANDDAG which are published on [graphdrawing.org](http://www.graphdrawing.org/) as well as the NIST’s “Matrix Market” [[2](https://link.springer.com/chapter/10.1007/978-3-030-04414-5_12#ref-CR2)].

### Example Figures

From “[Aesthetic Discrimination of Graph Layouts](https://link.springer.com/chapter/10.1007/978-3-030-04414-5_12) ([Appendix](https://arxiv.org/abs/1809.01017))”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/RandDAG%2054b6ed8fdecb4256b2cca6298f09965e/Untitled.png' width='80%'></div>

**Fig. 5.** (cropped)… All graphs are visualized using the $FM^3$ algorithm. 

<!-- === STOP RENDERING ===

Might be same as DAGmar graphs? looked at internet archive to see what the GD data website looked like in 2018 and there is no mention of RAndDAG as a thing, but there are the randomly generated DAGs which makes sense tto believe it is those. -->

::: 

The following collections are particularly varied in features:

<a name="Graphviz_Examples"></a>

::: {.callout-note title="Graphviz Examples" collapse=true appearance="minimal"}

While graphviz is a graph visualization software, its example gallery has proven useful to many researchers as a source of benchmark datasets.
The graphs have various origins, most of which are described on the Graphviz https://www.graphviz.org/gallery/. Example graphs used to generate images with the https://www.graphviz.org for their https://www.graphviz.org/gallery/. These graphs are picked as graphviz examples because they are diverse in types of features they contain: together with generic graphs, there are also graphs with <span class="pill-tag pill-tag-clusters">clusters</span>, <span class="pill-tag pill-tag-layered">layers</span>, <span class="pill-tag pill-tag-directed">directed edges</span> and <span class="pill-tag pill-tag-labeled-nodes">labeled nodes</span>.

<!-- ```{ojs}
//| echo: false

make_sparkline("Graphviz_Examples")
```

<div id="named-list-Graphviz_Examples" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Originally found at: </b><a href="https://gitlab.com/graphviz/graphviz/-/tree/main/tests/graphs">https://gitlab.com/graphviz/graphviz/-/tree/main/tests/graphs</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948d60c2b4d0e8d38620a" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96ce394a6be111712e991" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970e60c2b4d0f65386519" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90ea91101aa0c9e6a0c97" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>1-1464 nodes, 0-5806 edges</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@gansner2000]</div><div class="col-8">An open graph visualization system and its applications to software engineering</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@Gange2011]</div><div class="col-4">Optimal k-level planarization and crossing minimization</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><div class="row"><div class="col-4">[@Nachmanson2017]</div><div class="col-4">Node Overlap Removal by Growing a Tree</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@giovannangeli2023]</div><div class="col-4">FORBID: Fast Overlap Removal by&nbsp;Stochastic GradIent Descent for&nbsp;Graph Drawing</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><br>


### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Graphviz%20Examples%20e90aec42f02c4e8b8a6b8727fe2f86ae/four_in_one.svg' width='80%'></div>

### Descriptions from Literature

From “[Node Overlap Removal by Growing a Tree](https://doi.org/10.7155/jgaa.00442)”:

> Our data includes the same set of graphs that was used by the authors of PRISM to compare it with other algorithms [6]. The dataset is available in the Graphviz open source package.

From “[Optimal k-level planarization and crossing minimization](https://doi.org/10.1007/978-3-642-18469-7_22)”:

> The first set of graphs are all the hierarchical network diagrams appearing in the GraphViz gallery [3]… Table 1 shows the results of minimizing edge crossings and maximizing planar subgraphs with MIP and SAT solvers, as well as the crossings resulting in the Graphviz heuristic layout for graphs from the GraphViz gallery.

### Example Figures

From “[Node Overlap Removal by Growing a Tree](https://doi.org/10.7155/jgaa.00442)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Graphviz%20Examples%20e90aec42f02c4e8b8a6b8727fe2f86ae/Screen_Shot_2023-08-16_at_3.44.08_PM.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Graphviz%20Examples%20e90aec42f02c4e8b8a6b8727fe2f86ae/Screen_Shot_2023-08-16_at_3.44.43_PM.png' width='80%'></div>

From “[FORBID: Fast Overlap Removal by Stochastic GradIent Descent for Graph Drawing](https://link.springer.com/chapter/10.1007/978-3-031-22203-0_6)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Graphviz%20Examples%20e90aec42f02c4e8b8a6b8727fe2f86ae/Screen_Shot_2023-08-16_at_3.50.39_PM.png' width='80%'></div>

From “[Optimal k-level planarization and crossing minimization](https://doi.org/10.1007/978-3-642-18469-7_22)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Graphviz%20Examples%20e90aec42f02c4e8b8a6b8727fe2f86ae/Screen_Shot_2023-08-16_at_3.35.58_PM.png' width='80%'></div>

::: 

<a name="Scotch_GraphCollection"></a>

::: {.callout-note title="Scotch Graph Collection" callout-id="Scotch_GraphCollection" collapse=true appearance="minimal"}

Collection consisting of graphs from various sources including topological meshes, meshes related to physical problems (fluid dynamics, structural mechanics, combinatorial optimization), and interprocess communication graphs for a parallel computing implementation of a factorization solver.
The https://gitlab.inria.fr/scotch/scotch is produced by the https://www.labri.fr/perso/pelegrin/scotch/ whose goal is to study static mapping by the means of graph theory, using “divide and conquer'' graph bipartitioning heuristics. The original link to the data http://www.labri.u-bordeaux.fr/Equipe/PARADIS/Member/pelegrin/graph is broken.

```{ojs}
//| echo: false

make_sparkline("Scotch_GraphCollection")
```

<div id="named-list-Scotch_GraphCollection" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

The following two collections are particularly relevant for the display of temporal event sequences:

<a name="Storylines_MoviePlots"></a>

::: {.callout-note title="Storylines (Movie Plots)" collapse=true appearance="minimal"}

The storylines dataset is particularly useful for <span class="pill-tag pill-tag-temporal-event-sequence">temporal event sequence</span> visualization because of its <span class="pill-tag pill-tag-dynamic">dynamic</span> aspect and <span class="pill-tag pill-tag-clusters">clusters</span> (which also evolve through time). It is a collection of graphs that represent movie plots, and the nodes are the characters in the movie. The edges represent the interactions between the characters.
This dataset was initially collected by Yuzuru Tanahashi, then stored on his homepage at UC Davis which was lost. Through the help of personal connections at UC Davis, we were luckily able to recover the dataset.

<!-- ```{ojs}
//| echo: false

make_sparkline("Storylines_MoviePlots")
``` -->

<div id="named-list-Storylines_MoviePlots" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

<a name="Storylines_MoviePlots"></a>

::: {.callout-note title="Militarized Interstate Disputes (MID)" collapse=true appearance="minimal"}

Collected as part of the [correlatesofwar.org](https://correlatesofwar.org/data-sets/MIDs/) project, the dataset contains two disconnected <span class="pill-tag pill-tag-temporal-event-sequence">temporal event sequences</span>.

```{ojs}
//| echo: false

make_sparkline("Militarized_InterstateDisputesMID")
```

<div id="named-list-Militarized_InterstateDisputesMID" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

<a name="Complete_Graphs"></a>

::: {.callout-note title="Complete Graphs" callout-id="Complete_Graphs" collapse=true appearance="minimal"}

**Complete graphs** refers to a generic collection of graphs that are fully connected, i.e., each node is connected to every other node, up to any number of nodes that are needed for the purpose of the experiment. 
The linked dataset includes both the complete graphs $K_n$ for $5≤n≤50$ and the complete bipartite graphs $K_{n_1,n_2}$ for $5≤n1,n2≤40$. Crossing number is conjectured for most of these, and while not proven, we found these used in papers to validate minimum crossing numbers. We also note that the papers in our literature review did not provide example figures.

<!-- ```{ojs}
//| echo: false

make_sparkline("Complete_Graphs")
```

<div id="named-list-Complete_Graphs" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94965803e0c0c10558bc8" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94db50c2b4d0ea1386352" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d972030c2b4d0f5d3862dc" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href=" https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90ebb94a6be0ec012e7e6" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>5-80 nodes, 10-1600 edges</div><br>
<div><b>Number of Graphs: </b>1342</div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@Clancy2019]</div><div class="col-4">An effective crossing minimisation heuristic based on star insertion</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><br>

### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Complete%20Graphs%20202f26621cf34604935433a41b130f10/four_in_one.svg' width='80%'></div>

### Descriptions from Literature

From “[An effective crossing minimisation heuristic based on star insertion](https://doi.org/10.7155/jgaa.00487)”:

> **Complete graphs** - Although the crossing number of the complete graph $K_n$ is not known for for $n ≥ 13$, the value is conjectured, and typically assumed to be correct. We compare the nine combinations of schemes to see how close to the conjectured value each of them is able to get, for various sizes of complete graphs up to $n = 50$. We indicate how many crossings are obtained after the initial embedding, as well as at the conclusion of the heuristic. We also provide the runtimes, again separated into time spent producing the initial embedding, and time spent in the main loop of the heuristic.

> **Complete bipartite graphs** - Much like the complete graphs, the crossing number of the complete bipartite graph $K_{n1,n2}$ is only known in general for $n_1 ≤ 6$, but the value is conjectured and typically assumed to be correct. Again, we compare the nine combinations of schemes to see how close to the conjectured value they can get for values up to $n_1,n_2 = 40$, and report the same data as for the Complete graphs.

> The crossing number of the complete graph $K_n$ is conjectured (e.g. see Guy [25]) to be equal to
$H(n) := 1/4 \left\lfloor n/2\right\rfloor \left\lfloor (n − 1)/2\right\rfloor \left\lfloor(n − 2)/2\right\rfloor \left\lfloor (n − 3)/2\right\rfloor$.
Although this conjecture is widely believed to be correct, it has only been confirmed for $n ≤ 12$ despite considerable effort to extend the results further [30]. We ran the graphs $K_n$ for $5 ≤ n ≤ 50$. Each graph was run with 100 random permutations and the minimum found solution was compared to $H(n)$ by computing the percent relative deviation from $H(n)$…
For these graphs, we observe that when $n$ was odd, every scheme combination was able to obtain a drawing with $H(n)$ crossings. However, when $n$ was even, each scheme reached a value which was usually very close but not equal to $H(n)$.

> The crossing number of the complete bipartite graph $K_{n_1,n_2}$ is conjectured (e.g. see Zarankiewicz [35]) to be equal to $Z(n_1, n_2) := \left\lfloor n_1/2\right\rfloor \left\lfloor (n_1 − 1)/2\right\rfloor \left\lfloor n_2/2\right\rfloor \left\lfloor (n_2 − 1)/2\right\rfloor$.
We ran the graphs $K_{n_1,n_2}$ for $5 ≤ n1 ≤ n2 ≤ 40$. Each graph was run with 100 random permutations and the minimum found solution was compared to $Z(n_1,n_2)$… As can be seen in Table 6, QuickCross was successful in obtaining the conjectured optimum in all cases and for all scheme combinations, except $K_{30,30}$ and $K_{40,40}$

::: 

The datasets listed below are particularly useful when researchers are interested in testing for **crossing numbers**. Indeed, they both deal with graphs that have a known crossing numbers.

<a name="KnownCR"></a>

::: {.callout-note title="KnownCR" collapse=true collapse-id="KnownCR" appearance="minimal"}

**KnownCR** is a collection of graphs with known crossing numbers, and it is used to test the performance of algorithms that approximate the crossing number of a graph. The dataset is used in papers that aim to approximate the crossing number of a graph, and it is used to compare the results of the approximation algorithms to the known crossing numbers of the graphs.
A good resource for this is also the survey provided by [@Clancy2019ASO].
The graphs themselves do not appear to exist online elsewhere, but the method by which they can be created is fully described in [@gutwenger_phd].
<!-- The method by which they can be created is fully described in https://eldorado.tu-dortmund.de/handle/2003/27430?mode=full. -->

<!-- ```{ojs}
//| echo: false

make_sparkline("KnownCR")
```

<div id="named-list-KnownCR" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948121101aa0dc76a0c94" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96dce0c2b4d0f653862d7" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9715c0c2b4d0f65386577" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90ef60c2b4d0d2e3862be" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>9-250 nodes, 18-750 edges</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[link]</div><div class="col-8">Application of SPQR-Trees in the Planarization Approach for Drawing Graphs</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@Chimani2021]</div><div class="col-4">Star-Struck by Fixed Embeddings:
Modern Crossing Number Heuristics</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@Clancy2019]</div><div class="col-4">An effective crossing minimisation heuristic based on star insertion</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@Chimani2012]</div><div class="col-4">Advances in the Planarization Method: Effective Multiple Edge Insertions</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><br>


### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/KnownCR%20ed33d600c65e4c52a1506a905b774335/four_in_one.svg' width='80%'></div>

### Description from Literature

From “[An effective crossing minimisation heuristic based on star insertion](https://dx.doi.org/10.7155/jgaa.00487)”:

> KnownCR graphs- these are a set of instances containing between 9 and 250 vertices, first collected by Gutwenger [22], which can be further partitioned into four families of graphs as follows:
> $C_i \times C_j$: The Cartesian product of the cycle on $i$ vertices with the cycle on $j$ vertices. The instances contain graphs with $3 \leq i \leq 7$ and $j \geq i$ such that $ij \leq 250$.
> $G_i \times P_j$: The Cartesian product of the path on $j+1$ vertices with one of the 21 non-isomorphic connected graphs on 5 vertices, where $i$ denotes which of the 21. The instances contain graphs with $3 \leq j \leq 49$.
> $G_i \times C_j$: The Cartesian product of the cycle on $j$ vertices with one of the 21 non-isomorphic connected graphs on 5 vertices, where $i$ denotes which of the 21. The crossing number of these graphs is only known for some of the $G_i$ and only these cases are included. The instances contain graphs with $3 \leq j \leq 50$.
> The Generalised Petersen graphs $P(j,2)$ and $P(j,3)$, on $2j$ vertices. We shall only use those of type $P(j,3)$ as $P(j,2)$ (studied in [20]) are easy for heuristics to solve, as has already been observed in [9]. The instances contain graphs with $9 \leq j \leq 125$.

From “[Advances in the Planarization Method: Effective Multiple Edge Insertions](https://doi.org/10.1007/978-3-642-25878-7_10)”:

> Finally, the KnownCR graphs [11] are a collection of 1946 graphs with known crossing numbers (by proofs), consisting of generalized Petersen graphs (P(m, 2), P(m, 3)) and products of cycles $C_n$, paths $P_n$, and 5-vertex graphs $G_i (C_m \times C_n, G_i \times P_n, G_i \times C_n)$; these graphs have between 9 and 250 nodes.

### Example Figures

From “[Application of SPQR-Trees in the Planarization Approach for Drawing Graphs](https://eldorado.tu-dortmund.de/handle/2003/27430?mode=full)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/KnownCR%20ed33d600c65e4c52a1506a905b774335/Screen_Shot_2023-01-28_at_2.42.42_PM.png' width='80%'></div>

<!-- === STOP RENDERING ===

[Eldorado: Application of SPQR-trees in the planarization approach for drawing graphs](https://eldorado.tu-dortmund.de/handle/2003/27430?mode=full)

From *An effective crossing minimisation heuristic based on star insertion,* “KnownCR graphs- these are a set of instances containing between 9 and 250 vertices, first collected by Gutwenger [22], which can be further partitioned into four families of graphs as follows:

- Ci ×Cj: the Cartesian product of the cycle on i vertices with the cycle on j vertices. The instances contain graphs with 3 ≤ i ≤ 7 and j ≥i such that ij ≤ 250.
- Gi×Pj: the cartesian product of the path on j+1 vertices with one of the 21 non-isomorphic connected graphs on 5 vertices, where i denotes which of the 21. The instances contain graphs with 3 ≤ j ≤ 49.
- Gi ×Cj: the cartesian product of the cycle on j vertices with one of the 21 non-isomorphic connected graphs on 5 vertices, where i denotes which of the 21. The crossing number of these graphs are only known for some of the Gi and only these cases are included. The instances contain graphs with 3 ≤ j ≤ 50
- The Generalised Petersen graphs P(j,2) and P(j,3), on 2j vertices. We shall only use those of type P(j,3) as P(j,2) (studied in [20]) are154 Clancy et al. An effective crossing minimisation heuristic easy for heuristics to solve as has already been observed in [9]. The instances contain graphs with 9 ≤ j ≤ 125.” from **(An effective crossing minimisation heuristic based on star insertion, Clancy et al. )**

How to construct a cartesian product graph:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/KnownCR%20ed33d600c65e4c52a1506a905b774335/Screen_Shot_2023-01-28_at_2.42.31_PM.png' width='80%'></div>

Example of construction:

Images showing each Gi, and the known crossing number of Gi x Pn:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/KnownCR%20ed33d600c65e4c52a1506a905b774335/Screen_Shot_2023-01-28_at_2.50.06_PM.png' width='80%'></div> -->

::: 

<a name="WebCompute"></a>

::: {.callout-note title="WebCompute" callout-id="WebCompute" collapse=true appearance="minimal"}

The dataset is comprised of instances of graphs uploaded to Crossing Number WebCompute, attributed to M. Chimani, T. Wiedera. http://crossings.uos.de/cr-proof-system-paper.
Their website also features proofs of the crossing numbers of many of the Rome-Lib graphs. Newest version of database specifies non-planar graphs, but older versions do have some planar graphs.

<!-- ```{ojs}
//| echo: false

make_sparkline("WebCompute")
```

<div id="named-list-WebCompute" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Originally found at: </b>https://tcs.uos.de/doku.php?id=research/cr</div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94828803e0c0bf5558bab" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94d7d803e0c0c1f558c9c" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9709994a6be112912e9ec" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href=" https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90ea01101aa0c9e6a0c74" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>3-112 nodes, 3-366 edges</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@chimani2016b]</div><div class="col-8">An ILP-based Proof System for the Crossing Number Problem</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@chimani2016b]</div><div class="col-4">An ILP-based Proof System for the Crossing Number Problem</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><br>

### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/WebCompute%207a10c41801914e6faa5a6cc1b1ef0b77/four_in_one.svg' width='80%'></div>

### Descriptions from Literature

From “[An ILP-based Proof System for the Crossing Number Problem](https://doi.org/10.4230/LIPIcs.ESA.2016.29)”:

> To determine the applicability of the proof system, we tested the algorithms on three
benchmark sets: the 3110 non-trivial Rome graphs [14], the 1277 North graphs [15], and the145 non-planar graphs ([http://crossings.uos.de/instances](http://crossings.uos.de/instances)) collected by our crossing
number web-service.

<!-- === STOP RENDERING ===

Paper attached to his dataset provides no visuliaztion of the graph, [https://arxiv.org/abs/2108.11443](https://arxiv.org/abs/2108.11443) also uses the dataset and provides no visualizations of the graphs themselves -->

::: 

Collections of graphs that focus on one specific attribute can also be useful in case the attribute relates to geographical data:

<a name="World_Maps"></a>

::: {.callout-note title="World Maps" collapse=true collapse-id="World_Maps" appearance="minimal"}

Datasets contain various attributes for a few locations and their geographical adjacency, namely neighboring states, countries, and municipalities.
World Bank country information transformed into a weight-vectors dataset. Some of the incomplete data was filled from disparate sources mentioned in the paper’s supplemental materials: [https://doi.org/10.48550/arXiv.1908.07291](https://doi.org/10.48550/arXiv.1908.07291). The collection contains 14 graphs with <span class="pill-tag pill-tag-dynamic">dynamic</span> and <span class="pill-tag pill-tag-spatial">spatial</span> attributes, <span class="pill-tag pill-tag-categorical-nodes">categorical nodes</span>, and <span class="pill-tag pill-tag-weighted-nodes">weighted nodes</span>.

<!-- ```{ojs}
//| echo: false

make_sparkline("World_Maps")
```

<div id="named-list-World_Maps" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Originally found at: </b><a href="https://data.worldbank.org/indicator
">https://data.worldbank.org/indicator
</a><a href="https://github.com/loizuf/StableDemersLP/tree/main/code/StableDemers_TVCG/data">https://github.com/loizuf/StableDemersLP/tree/main/code/StableDemers_TVCG/data</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948f10c2b4d0e8d386217" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96dde0c2b4d0f653862e3" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971f194a6be112a12eaaa" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94aca94a6be102f12e736" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>48-514 nodes, 205-2428 edges</div><br>
<div><b>Number of Graphs: </b>14</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@Nickel2019]</div><div class="col-8">Computing Stable Demers Cartograms</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@Nickel2019]</div><div class="col-4">Computing Stable Demers Cartograms</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">dynamic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">spatial</div></div></div><br>

### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/World%20Maps%2099689f52cc854daba9c25be42de1cbe3/four_in_one.svg' width='80%'></div>

### Descriptions from Literature

From  [Computing Stable Demers Cartograms](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_4)”:

> We run experiments on real-world datasets. For time-series data, we expect a gradual change and strong correlation between the different values. For weight-vectors data, we expect more erratic changes and less correlation. We use two maps with rather different geographic structures: the first (**World**) is a map of world countries, having mixed region (country) sizes in a rather unstructured manner; the second (**US**) is a map of the 48 contiguous US states, having relatively high structure in sizes of its states, with large states in the middle and along the west coast and many smaller states along the east coast.

From Supplemental Materials, Appendix C of *[“Computing Stable Demers Cartograms*”:](https://doi.org/10.48550/arXiv.1908.07291)

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/World%20Maps%2099689f52cc854daba9c25be42de1cbe3/Untitled.png' width='80%'></div>

### Example Figures

From  [Computing Stable Demers Cartograms](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_4)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/World%20Maps%2099689f52cc854daba9c25be42de1cbe3/Untitled%201.png' width='80%'></div>

<!-- === STOP RENDERING ===

from [Computing Stable Demers Cartograms](../Benchmark%20sets%200cc6b5e454304aec98f3b59b1a720476/Literature%20ad87f14e7097454fb2f784e2c8a2797a/Literature%20-%20Algorithm%2012e01bfc60a84007aa7d2d34293e123d/Computing%20Stable%20Demers%20Cartograms%20fb418899e13f45f4b6b3c6296e07a599.md) 

World bank - bunch of references - all temporal datasets!

Missing Data from the world bank was filled with following linked sources:

https://en.wikipedia.org/wiki/Economy of North Korea#cite note-2

https://tradingeconomics.com/kuwait/rural-population-wb-data.html

http://www.efgs.info/wp-content/uploads/conferences/efgs/2016/S8-1
presentationV1 IdrizShala EFGS2016.pdf

https://tradingeconomics.com/eritrea/rural-population-wb-data.html

https://tradingeconomics.com/kuwait/forest-area-percent-of-land-area-wb-data.
html

https://tradingeconomics.com/kosovo/forest-area-percent-of-land-area-wb-data.
html -->

::: 

And finally, a collection of graph problems:

<a name="SteinLib"></a> 

::: {.callout-note title="SteinLib" collapse-id="SteinLib" collapse=true appearance="minimal"}

**SteinLib** is a collection of Steiner tree problems in graphs and variants. Their [website](https://steinlib.zib.de/steinlib.php) has additional information about each problem in the dataset, including whether or not it has been solved. We omit two sets, [Relay](https://steinlib.zib.de/showset.php?Relay) and [EFST](https://steinlib.zib.de/showset.php?EFST), from our provided data due to size constraints.

<!-- ```{ojs}
//| echo: false

make_sparkline("SteinLib")
```

<div id="named-list-SteinLib" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Originally found at: </b><a href="https://steinlib.zib.de/steinlib.php">https://steinlib.zib.de/steinlib.php</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948684cf74810580556ac" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://osf.io/download/zbrf5/" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href=" https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970300c2b4d0f61386324" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e5e1101aa0c9f6a0c0f" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>6-38,418 nodes, 9-221,445 edges</div><br>
<div><b>Number of Graphs: </b>1207</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@koch2001]</div><div class="col-8">SteinLib: An Updated Library on Steiner Tree Problems in Graphs</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@chimani2016]</div><div class="col-4">A Note on the Practicality of Maximal Planar Subgraph Algorithms</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">planar</div></div></div><br>

### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/SteinLib%204b766ffe22de40ecaa9307671862ea96/four_in_one.svg' width='80%'></div>

### Descriptions from Literature

From [A Note on the Practicality of Maximal Planar Subgraph Algorithms](https://doi.org/10.1007/978-3-319-50106-2_28):

> We use the non-planar graphs of the established benchmark sets North [12] (423 instances), Rome [11] (8249), and **SteinLib** [16] (586), all of which include real-world instances. In our plots, we group instances according to |V| rounded to the nearest multiple of 10; for Rome we only consider graph with ≥ 25 vertices.

### Example Figures

From [SteinLib: An Updated Library on Steiner Tree Problems in Graphs](https://doi.org/10.1007/978-1-4613-0255-1_9):

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/SteinLib%204b766ffe22de40ecaa9307671862ea96/Screen_Shot_2023-08-09_at_4.09.50_PM.png' width='80%'></div>

<!-- === STOP RENDERING ===

Is it lost? -->

::: 

::: {.callout-note title="Biological Pathways (KEGG)" collapse=true appearance="minimal"}

According to [kegg.jp](https://www.kegg.jp/kegg-bin/show_pathway?map01100), “the KEGG PATHWAY database is a collection of manually drawn graphical diagrams, called KEGG pathway maps, for metabolic pathways, signaling pathways, pathways involved in various cellular processes and organismal systems, and perturbed pathways associated with human diseases.”

```{ojs}
//| echo: false

make_sparkline("Biological_PathwaysKEGG")
```

<div id="named-list-Biological_PathwaysKEGG" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 



<a name="Co-Phylogenetic_Trees"></a>

::: {.callout-note title="Co-Phylogenetic Trees" collapse-id="Co-Phylogenetic_Trees" collapse=true appearance="minimal"}

Collected by the authors of “https://almob.biomedcentral.com/articles/10.1186/s13015-014-0031-3. Each element of the data set is two binary co-phylogentic trees. “Caryophyllaceae & Microbotryum” and “Stinkbugs & Bacteria” are missing but our dataset includes all other files from “https://doi.org/10.1007/978-3-319-73915-1_27”. An additional dataset from “https://almob.biomedcentral.com/articles/10.1186/s13015-014-0031-3”, called “Wolbachia”, is included. Naturally, the data contains <span class="pill-tag pill-tag-trees">trees</span>. 

<!-- ```{ojs}
//| echo: false

make_sparkline("Co-Phylogenetic_Trees")
```

<div id="named-list-Co-Phylogenetic_Trees" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Originally found at: </b><a href="https://gitlab.inria.fr/erable/eucalypt/-/blob/master/html/PaperDatasets.zip">https://gitlab.inria.fr/erable/eucalypt/-/blob/master/html/PaperDatasets.zip</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948a24cf748105905574b" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://osf.io/download/m9wf2/" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970c00c2b4d0f5d3862a4" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90ee40c2b4d0d2e3862b7" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>13-773 nodes, 12-772 edges</div><br>
<div><b>Number of Graphs: </b>30</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@Donati2015]</div><div class="col-8">EUCALYPT: efficient tree reconciliation enumerator</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@Calamoneri2018]</div><div class="col-4">Visualizing Co-phylogenetic Reconciliations</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(155, 154, 151);">binary trees</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">trees</div></div></div><br>

### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Co-Phylogenetic%20Trees%202440f3927d254148abd93168c1399b43/four_in_one.svg' width='80%'></div>

### Descriptions from Literature

From “[EUCALYPT: efficient tree reconciliation enumerator](https://almob.biomedcentral.com/articles/10.1186/s13015-014-0031-3)”:

> To test EUCALYPT, we selected 12 datasets from the literature. As we are mostly interested in host-parasite systems, the first 10 datasets concern such relations: EC Encyrtidae & Coccidae [23], GL Gopher & Lice [24], SC Seabirds & Chewing Lice [25], RP Rodents & Pinworms [26], SCF Smut Fungi & Caryophillaceus plants [27], PLML Pelican Lice ML [28] (the trees are generated through a maximum likelihood approach), PLMP Pelican Lice MP [28] (the trees are generated through a maximum parsimony approach), RH Rodents & Hantaviruses [29], PP Primates & Pinworm [30], and FD Fishs and Dactylogyrus [31].

> In addition, we used a dataset of our own which corresponds to arthropod hosts and a bacterium genus, Wolbachia, living inside the cells of their hosts [32,33]. The datasets were chosen to provide a variety in terms of size of the host and parasite trees: those from the literature are relatively small (from 7 to 100 leaves), while our own data provide an example of much bigger host and parasite trees, each having 387 leaves. Moreover, we were careful that the selected datasets cover, as much as possible, a range of situations in terms of coevolution and of the expected frequencies of each event

### Example Figures

From “[Visualizing Co-phylogenetic Reconciliations](https://doi.org/10.1007/978-3-319-73915-1_27)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Co-Phylogenetic%20Trees%202440f3927d254148abd93168c1399b43/Screen_Shot_2023-08-15_at_10.50.19_AM.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Co-Phylogenetic%20Trees%202440f3927d254148abd93168c1399b43/Screen_Shot_2023-08-15_at_10.50.09_AM.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Co-Phylogenetic%20Trees%202440f3927d254148abd93168c1399b43/Screen_Shot_2023-08-15_at_10.49.57_AM.png' width='80%'></div>

<!-- === STOP RENDERING ===

from [Visualizing Co-phylogenetic Reconciliations](../Benchmark%20sets%200cc6b5e454304aec98f3b59b1a720476/Literature%20ad87f14e7097454fb2f784e2c8a2797a/Literature%20-%20Algorithm%2012e01bfc60a84007aa7d2d34293e123d/Visualizing%20Co-phylogenetic%20Reconciliations%20fd4b98c0071f4e96924bacd938e706b5.md) 
Eucalypt tool (Donati, B., Baudet, C., Sinaimeri, B., Crescenzi, P., Sagot, M.F.: EUCALYPT:
efficient tree reconciliation enumerator. Algorithms Mol. Biol. 10(1), 3 (2015)), trees from a bioinfromatics journal (Wieseke, N., Hartmann, T., Bernt, M., Middendorf, M.: Cophylogenetic reconcil-
iation with ILP. IEEE/ACM Trans. Comput. Biol. Bioinform. 12(6), 1227–1235
(2015))

Figure below: An HP-drawing of a reconciliation of Gopher & Lice drawn by SearchMaximalPlanar. (2) The same instance drawn by ShortenHostSwitch.

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Co-Phylogenetic%20Trees%202440f3927d254148abd93168c1399b43/Untitled.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Co-Phylogenetic%20Trees%202440f3927d254148abd93168c1399b43/evolu.png' width='80%'></div> -->

::: 

### Established Network Repositories

A popular choice is to use datasets from **Established Network Repositories**. These are ample collections, often organized in dedicated websites which also offer a few stats about the contained graphs. Because their hosts are already dedicated to the maintaining and reporting of information on these collections, we do not include here any storage of the data (which would be redundant) or report statistics on them. Rather, our analysis here is focused on highlighting their properties, origins, and ways in which they have been used. 

Compiled by the [Mathematical and Computational Sciences Division](https://math.nist.gov/mcsd/) of the [Information Technology Laboratory](http://www.itl.nist.gov/) of the [National Institute of Standards and Technology](http://www.nist.gov/), the **Matrix Market** is a repository of test data for use in comparative studies of algorithms for numerical linear algebra, featuring nearly 500 sparse matrices from a variety of applications, as well as matrix generation tools and services. It has been used for experiments with <span class="pill-tag pill-tag-generic">generic</span> graphs, <span class="pill-tag pill-tag-large">large</span> graphs, and graphs with <span class="pill-tag pill-tag-weighted-edges">weighted edges</span>. Each matrix entry is accompanied by metadata that includes the matrix name and identifier, dimensions (number of rows and columns), number of non-zero elements, symmetry type (symmetric, skew-symmetric, or general) and data type (real, complex, integer, or pattern). The website also provides visualizations of the matrices, helping users understand their structure and distribution of non-zero elements. Downloads are also provided in a variety of formats, including their own Matrix Market Exchange (MME) format, Harwell-Boeing, and MATLAB.

::: {.callout-note title="Matrix Market" collapse=true appearance="minimal"}

<!-- <div id="named-list-Matrix_Market" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div class="col small-text"><div><b>Originally found at: </b><a href="https://math.nist.gov/MatrixMarket/index.html">https://math.nist.gov/MatrixMarket/index.html</a></div><br><div><b>Download formatted data: </b></div><br><div><b>Note: </b>A repository of test data for use in comparative studies of algorithms for numerical linear algebra, featuring nearly 500 sparse matrices from a variety of applications, as well as matrix generation tools and services.</div><br><br><div><b>Origin Notes: </b>Compiled by the <a href="https://math.nist.gov/mcsd/&nbsp;">https://math.nist.gov/mcsd/&nbsp;</a>of the&nbsp;<a href="http://www.itl.nist.gov/&nbsp;">http://www.itl.nist.gov/&nbsp;</a>of the&nbsp;<a href="http://www.nist.gov/">http://www.nist.gov/</a></div><br><div><b>Origin paper: </b></div><div>Matrix Market: a web resource for test matrix collections</div><br><div><b>Usage examples: </b></div><div class="row"><div class="col-8"><span class="citation" data-cites="klammler2018"><a href="#ref-klammler2018" role="doc-biblioref" aria-expanded="false">[link]</a></span> &nbsp; Aesthetic Discrimination of Graph Layouts</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-8"><span class="citation" data-cites="KOREN20051867"><a href="#ref-KOREN20051867" role="doc-biblioref" aria-expanded="false">[link]</a></span> &nbsp; Drawing graphs by eigenvectors: theory and practice</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-8"><span class="citation" data-cites="brandes2006"><a href="#ref-brandes2006" role="doc-biblioref" aria-expanded="false">[link]</a></span> &nbsp; Eigensolver methods for progressive multidimensional scaling of large data</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-8"><span class="citation" data-cites="Gansner2005"><a href="#ref-Gansner2005" role="doc-biblioref" aria-expanded="false">[link]</a></span> &nbsp; Graph Drawing by Stress Majorization</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">weighted edges</div></div></div><div class="row"><div class="col-8"><span class="citation" data-cites="meidiana2020"><a href="#ref-meidiana2020" role="doc-biblioref" aria-expanded="false">[link]</a></span> &nbsp; Sublinear Time Force Computation for Big Complex Network Visualization</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><br><div></div><div><h3 id="descriptionsfromliterature">Descriptions from Literature</h3></div><div></div><div><p>From “<a href="https://doi.org/10.1007/978-3-540-31843-9_25">Graph Drawing by Stress Majorization</a>”:</p></div><div></div><div><blockquote>
  <p>The first example is the 1138Bus graph (|V|=1138, |E|=1458) from the Matrix Market repository [1]. This graph models a network of high-voltage power distribution lines. Figure 4 shows two layouts of this graph.</p>
</blockquote></div><div></div><div><h3 id="examplefigures">Example Figures</h3></div><div></div><div><p>From “<a href="https://doi.org/10.1016/j.camwa.2004.08.015">Drawing graphs by eigenvectors: theory and practice</a>” (top two layouts are a Matrix Market graph):</p></div><div></div><div style="text-align: center;"><img src="data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Matrix%20Market%2080bd4320417342458aefa031cf65db1f/Screen_Shot_2023-08-17_at_9.59.19_AM.png" width="80%"></div><div></div><div><p>From “<a href="https://doi.org/10.1007/978-3-540-31843-9_25">Graph Drawing by Stress Majorization</a>”:</p></div><div></div><div style="text-align: center;"><img src="data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Matrix%20Market%2080bd4320417342458aefa031cf65db1f/Screen_Shot_2023-08-17_at_11.13.32_AM.png" width="80%"></div></div>

::: 

<a name="Network_Repository"></a>

The **Network Repository** was proposed in 2015 by Rossi and Ahmed of Purdue University as a visually interactive real world graph tool and database. Graphs in this repository are tagged with their real-world source, have in-depth analysis, and even a preview visualization of each individual graph. Types of graphs include social networks, infrastructure networks, biological networks, and many others. The repository also offers sources for individual graphs. It contains many graphs from other benchmark sets described here.

::: {.callout-note title="Network Repository" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("Network_Repository")
```

<div id="named-list-Network_Repository" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Originally found at: </b><a href="https://networkrepository.com/">https://networkrepository.com/</a></div><br>
<!-- <div><b>Note: </b>Graphs in this repository are tagged with their real-world source, have in-depth analysis, and even a preview visualization of each individual graph. Types of graphs include social networks, infrastructure networks, biological networks, and many others. The repository also offers sources for individual graphs. It contains many graphs from other benchmark sets described here.</div><br>
<br>
<div><b>Origin Notes: </b>This repository was proposed in 2015 by Rossi and Ahmed of Purdue University as a visually interactive real world graph tool and database.</div><br> -->
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@nr]</div><div class="col-8">The Network Data Repository with Interactive Graph Analytics and Visualization</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@Eades2018]</div><div class="col-4">Drawing Big Graphs Using Spectral
Sparsification</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@Arleo2019]</div><div class="col-4">A Distributed Multilevel Force-Directed Algorithm</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><br>

### Descriptions from Literature

From “[A Distributed Multilevel Force-Directed Algorithm](https://doi.org/10.1109/TPDS.2018.2869805)”:

> To evaluate the running time of MULTI-GILA, we used the REALGRAPHS and BIGGRAPHS benchmarks, which contain larger graphs extracted from both real-world applications and synthetic generators; see Table 4. The REALGRAPHS set includes the 5 largest real-world graphs (mainly scale-free graphs) used in the experimental study of GILA [5]. These graphs are taken from the Stanford Large Networks Dataset Collection [3] and from the **Network Data Repository** [46], and their number of edges is between 121523 and 1541514.

From “[Drawing Big Graphs Using Spectral Sparsification](https://link.springer.com/chapter/10.1007/978-3-319-73915-1_22)”:

> We used three data sets. The first set of graphs is taken from “defacto-benchmark” graphs, including the Hachul library, Walshaw’s Graph Partitioning Archive, the sparse matrices collection [[6](https://link.springer.com/chapter/10.1007/978-3-319-73915-1_22#ref-CR6)] and the network repository [[24](https://link.springer.com/chapter/10.1007/978-3-319-73915-1_22#ref-CR24)]. These include two types of graphs that have been extensively studied in graph drawing research: grid-like graphs and scale-free graphs.

::: 

<a name="Pajek"></a>

The **Pajek** Program for Large Network Analysis is a tool developed and hosted by Andrej Vlado and some of their colleagues. As part of this program, they later compiled relevant graphs and links to other datasets, which we call today the Pajek collection. As a curiosity, pajek means spider in Slovenian. Many of Pajek graphs have been included as part of the [SuiteSparse Matrix Collection](#SuiteSparse_MatrixCollection).

::: {.callout-note title="Pajek" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("Pajek")
```

<div id="named-list-Pajek" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Originally found at: </b><a href="http://vlado.fmf.uni-lj.si/pub/networks/data/">http://vlado.fmf.uni-lj.si/pub/networks/data/</a></div><br>
<!-- <div><b>Download formatted data: </b></div><br> -->
<!-- <div><b>Note: </b>Pajek means spider in Slovenian.</div><br>
<br>
<div><b>Origin Notes: </b>The Pajek Program for Large Network Analysis is a tool developed and hosted by Andrej Vlado and some of their colleges. As part of this program, they later compiled relevant graphs and links to other datasets, which we call today the Pajek collection.</div><br> -->
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@pajek]</div><div class="col-8">Pajek datasets</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@noack2004]</div><div class="col-4">Energy Models for Graph Clustering</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">clusters (generated)</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@Meidiana2019]</div><div class="col-4">A Quality Metric for Visualization of Clusters in Graphs</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">clusters (generated)</div></div></div><br>

### Descriptions from Literature

From “[Energy Models for Graph Clustering](https://doi.org/10.1007/978-3-540-24595-7_40)”:

> **Airline Routing (Figure 5):** The nodes of this graph represent US airports, and the (unweighted) edges represent direct flights. The probability that two airports are connected by a direct flight is strongly related to their geographical distance: Most direct flights are relatively short, and only few large hub airports are connected by direct long-range flights.
The distances in the edge-repulsion LinLog layout resemble the relative geographical distances of the airports remarkably closely, given that the graph does not contain any explicit information about geographical distances.

> **Dictionary (Figure 7):** The nodes represent terms in the Online Dictionary of Library and Information Science (ODLIS), and the edges represent hyperlinks. A hyperlink between two terms exists if one term is used to describe the meaning of the other term, and thus connects semantically related terms.
The edge-repulsion LinLog layout indeed groups semantically related terms, which is better reflected in the VRML file on the supplementary web page than in Figure 7(c). Such a grouping is useful, for example, for discovering the global topic areas (like publishing, printing, information technology, etc.), for identifying entry points for the exploration of topics, or for finding semantically
related terms even if they are not explicitly linked.

From “[A Quality Metric for Visualization of Clusters in Graphs](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_10)”:

> We re-used some datasets from the validation experiments and created some new ones, listed in Table [2](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_10#Tab2). We also selected real world graph datasets with existing vertex categorization, which are listed under the double line in Table [2](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_10#Tab2). The datasets were taken from Pajek [[2](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_10#ref-CR2)] and Stanford Network Analysis Project’s (SNAP) repository [[23](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_10#ref-CR23), [40](https://link.springer.com/chapter/10.1007/978-3-030-35802-0_10#ref-CR40)].

### Example Figures

From “[Energy Models for Graph Clustering](https://doi.org/10.1007/978-3-540-24595-7_40)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Pajek%20e323e05a735d4151a0bccfec08aa3bd6/Screen_Shot_2023-08-17_at_4.05.25_PM.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Pajek%20e323e05a735d4151a0bccfec08aa3bd6/Screen_Shot_2023-08-17_at_4.06.19_PM.png' width='80%'></div>

<!-- === STOP RENDERING ===

[http://vlado.fmf.uni-lj.si/pub/networks/data/](http://vlado.fmf.uni-lj.si/pub/networks/data/)

Direct flights between US airports (332 nodes, 2126 edges). Some

distant airports in Alaska and the South Sea (e.g. Guam) are omitted to improve

readability.

[](http://vlado.fmf.uni-lj.si/pub/networks/doc/)

Collection of other dataset that might not be linked into paper

There is another link to data not mentioned in their repo. (Also part of SuiteSpase Matrix Collection) -->

::: 

<a name="SNAP"></a>

The **SNAP** repository is a collection of datasets assembled as part of the Stanford Network Analysis Platform, which started in 2004 and launched their website in 2009.
Well-known, widely used graph repository.
<!-- There also exists BioSNAP, which consists of similar datasets for medical applications under the same umbrella project. While BioSNAP was not as relevant in the literature, it may still prove useful for future researchers.  -->
A number of graphs that became relevant individually are included in SNAP, such as <a href="#Enron" class="dataset-link">Enron</a>, [Amazon](#amazon), [Protein Interactions](#protein-interaction) datasets and various [Social Network](#social-network) graphs. SNAP contains <span class="pill-tag pill-tag-generic">generic</span> graphs, <span class="pill-tag pill-tag-directed">directed</span> and <span class="pill-tag pill-tag-undirected">undirected</span> graphs, <span class="pill-tag pill-tag-dynamic">dynamic</span> graphs and more. Graphs are presented with name and descriptions and a few statistics such as a general description, numbers of nodes and edges, source and reference information.

::: {.callout-note title="SNAP (Stanford Network Analysis Platform)" collapse-id="SNAP" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("SNAP_StanfordNetworkAnalysisPlatform")
```

<div id="named-list-SNAP_StanfordNetworkAnalysisPlatform" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Originally found at: </b><a href="http://snap.stanford.edu/data/index.html">http://snap.stanford.edu/data/index.html</a></div><br>
<!-- <div><b>Note: </b>Well-known, widely used graph repository.
Note that BioSNAP, which consists of similar datasets for medical applications, exists under the same umbrella project. While BioSNAP was not as relevant in the literature, it may still prove useful for future researchers.</div><br> -->
<div><b>Size: </b>1008 unique graphs (excluding graph classification tasks consisting of 352,536 graphs)</div><br>
<!-- <div><b>Origin Notes: </b>The SNAP library is the collection of datasets assembled as part of the Stanford Network Analysis Platform, which started in 2004 and launched their website in 2009. The group attributes the dataset preparation to Ana Pavlisic. </div><br> -->
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@snapnets]</div><div class="col-8">SNAP Datasets: Stanford Large Network Dataset Collection</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@Arleo2019]</div><div class="col-4">A Distributed Multilevel Force-Directed Algorithm</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@Meidiana2019]</div><div class="col-4">A Quality Metric for Visualization of Clusters in Graphs</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">clusters (generated)</div></div></div><div class="row"><div class="col-4"></div><div class="col-4">ForceAtlas2</div><div class="col-4"></div></div><div class="row"><div class="col-4"></div><div class="col-4">a Continuous Graph Layout Algorithm for Handy Network Visualization Designed for the Gephi Software</div><div class="col-4"></div></div><div class="row"><div class="col-4"></div><div class="col-4">A Random Sampling O</div><div class="col-4"></div></div><div class="row"><div class="col-4">[@zhong2023]</div><div class="col-4">Force-Directed Graph Layouts Revisited: A New Force Based on the T-Distribution</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@meidiana2023]</div><div class="col-4">Shape-Faithful Graph Drawings</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(11, 110, 153);">almost proximity drawable graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">mesh graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">scale-free graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">strong proximity drawable graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(155, 154, 151);">weak proximity drawable graphs</div></div></div><br>

### Descriptions from Literature

From “[ForceAtlas2, a Continuous Graph Layout Algorithm for Handy Network Visualization Designed for the Gephi Software](https://doi.org/10.1371/journal.pone.0098679)”:

> We benchmarked our algorithm with a dataset of 68 networks from 5 to 23,133 nodes. We tried to gather varied networks corresponding to the actual use of Gephi (a lot of social networks, and scale-free networks in general). Most of these networks are from the Stanford Large Network Dataset Collection ([http://snap](http://snap/). [stanford.edu/data/](http://stanford.edu/data/)) and include social networks (Facebook and Twitter ego-networks), collaboration networks (from Arxiv) and autonomous systems (peering information inferred from Oregon route-views).

### Example Figures

From “[ForceAtlas2, a Continuous Graph Layout Algorithm for Handy Network Visualization Designed for the Gephi Software](https://doi.org/10.1371/journal.pone.0098679)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/SNAP%20(Stanford%20Network%20Analysis%20Platform)%201cd77eaee57147ce8263b2f9eaa2589c/Screen_Shot_2023-08-02_at_11.20.12_AM.png' width='80%'></div>

::: 

<a name="Stanford_GraphBase"></a>

Compiled by Donald Knuth, the **Stanford Graphbase** consists of programs and datasets for network analysis. The datasets accompany a textbook, “The Stanford GraphBase: A Platform for Combinatorial Computing”.

::: {.callout-note title="Stanford GraphBase" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("Stanford_GraphBase")
```

<div id="named-list-Stanford_GraphBase" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Originally found at: </b><a href="https://www-cs-faculty.stanford.edu/~knuth/sgb.html">https://www-cs-faculty.stanford.edu/~knuth/sgb.html</a></div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@Knuth_2009]</div><div class="col-8">The Stanford GraphBase: A Platform for Combinatorial Computing</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@kruiger2017]</div><div class="col-4">Graph Layouts by t-SNE</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">clusters (generated)</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">planar</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">spatial</div></div></div><div class="row"><div class="col-4">[@Raj2018]</div><div class="col-4">Anisotropic Radial Layout for Visualizing Centrality and Structure in Graphs</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">clusters (generated)</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">weighted edges</div></div></div><div class="row"><div class="col-4">[@Gronemann2016b]</div><div class="col-4">Crossing Minimization in Storyline Visualization</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">dynamic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">dynamic (discrete)</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><div class="row"><div class="col-4">[@junger1997]</div><div class="col-4">2-Layer Straightline Crossing Minimization</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">bipartite</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div></div></div><div class="row"><div class="col-4">[@barth2002]</div><div class="col-4">Simple and Efficient Bilayer Cross Counting</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">bipartite</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div></div></div><div class="row"><div class="col-4"></div><div class="col-4">A Random Sampling O</div><div class="col-4"></div></div><br>


### Descriptions from Literature

From “[Crossing Minimization in Storyline Visualizations](https://doi.org/10.1007/978-3-319-50106-2_29)”:

> Since the instances “Anna Karenina” and “Les Miserables” are very big, we have split them into chapters and sequences of chapters. The resulting test-bed is made of eight chapters, seven pairs of chapters, six triples of chapters and five quadruples of chapters from “Anna Karenina”, and five chapters, four pairs of chapters and three triples of chapters from “Les Mis ́erables”, plus the entire “Adventures of Huckleberry Finn”, “Inception-sf”, “Inception”, “Star Wars”, “The Matrix-sf”, and “The Matrix”.

From “[Anisotropic Radial Layout for Visualizing Centrality and Structure in Graphs](https://doi.org/10.1007/978-3-319-73915-1_28)”:

> The third dataset is a graph of character associations in the famous French novel Les Miserables (Fig. 5) [18]. This graph consists of 77 nodes, each representing a character in the novel, and 254 weighted edges where the weights represent the number of chapters that feature both characters associated with an edge.
We see the that the main protagonist Valjean (marked in red) is placed prominently in all three visualizations (Fig. 5). However, other key characters in the plot such as Inspector Javert (blue) and Cosett (orange), who do not appear often with characters other than the protagonist (and thus have low betweenness centrality) are treated differently. While the radial layout relegates them to the periphery (far from Valjean) (Fig. 5b), MDS (Fig. 5a) paints a conflicting picture with regard to their centrality, e.g., Cosett’s node almost overlaps with Valjean despite its low centrality. In contrast, the proposed ARL (Fig.5c) is able to coherently convey the low centrality of the Inspector Javert and Cosett, as well as, their closeness to Valjean. The above issue of distance distortion appears to be a frequent occurrence in the radial layout due to many characters who have a low centrality value causing them to end up being packed in the outer periphery. A case of contrast is that of the character Bishop Myriel (green) who despite being associated with several characters, is only seen with Valjean once.

### Example Figures

From “[Crossing Minimization in Storyline Visualizations](https://doi.org/10.1007/978-3-319-50106-2_29)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Stanford%20GraphBase%20effff4b40e9d4a79b6f33825ccca7401/Screen_Shot_2023-08-17_at_4.29.43_PM.png' width='80%'></div>

From “[Graph Layouts by t-SNE](https://doi.org/10.1111/cgf.13187)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Stanford%20GraphBase%20effff4b40e9d4a79b6f33825ccca7401/Screen_Shot_2023-08-17_at_4.21.24_PM.png' width='80%'></div>

lesmis is the GraphBase Les Miserables graph

From “[Anisotropic Radial Layout for Visualizing Centrality and Structure in Graphs](https://doi.org/10.1007/978-3-319-73915-1_28)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Stanford%20GraphBase%20effff4b40e9d4a79b6f33825ccca7401/Screen_Shot_2023-08-17_at_4.23.56_PM.png' width='80%'></div>

::: 

<a name="SuiteSparse_MatrixCollection"></a>

The **SuiteSparse Matrix Collection**, formerly known as the **University of Florida Sparse Matrix Collection**, is a comprehensive repository of 2893 sparse matrices. All graphs in SuiteSparse belong to groups which will have more information about the graphs and the sub-collections they belong to. In our Descriptions from the Literature section we also highlight a few tables with the specific graphs used in a couple of papers. From “The university of Florida Sparse Matrix Collection”, Davis and Hu describe the origin of this network repository. Namely they cite the Harwell-Boeing collection as the starting point for SuiteSparse, then called the University of Florida (UF) Sparse matrix collection, back in 1991. Other groups, or collections, have then been added to SuitseSparse through the years, mainly focusing on real-world matrices and other relevant problems related to them.

::: {.callout-note title="SuiteSparse Matrix Collection" collapse=true appearance="minimal"}
<!-- 
<div id="named-list-SuiteSparse_MatrixCollection" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Originally found at: </b><a href="https://sparse.tamu.edu/">https://sparse.tamu.edu/</a></div><br>
<div><b>Size: </b>2893</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@davis2011]</div><div class="col-8">The University of Florida Sparse Matrix Collection</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@Gansner2013]</div><div class="col-4">A Maxent-Stress Model for Graph Layout</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@Ortmann2017]</div><div class="col-4">A Sparse Stress Model</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">weighted edges</div></div></div><div class="row"><div class="col-4">[@Eades2018]</div><div class="col-4">Drawing Big Graphs Using Spectral
Sparsification</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@Hong2019]</div><div class="col-4">Multi-level Graph Drawing Using Infomap Clustering</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">multilevel</div></div></div><div class="row"><div class="col-4">[@Brsig2020]</div><div class="col-4">Stochastic Gradient Descent Works Really Well for Stress Minimization</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@kruiger2017]</div><div class="col-4">Graph Layouts by t-SNE</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">clusters (generated)</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">planar</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">spatial</div></div></div><div class="row"><div class="col-4">[@zheng2019]</div><div class="col-4">Graph Drawing by Stochastic Gradient Descent</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@DRGraph21]</div><div class="col-4">DRGraph: An Efficient Graph Layout Algorithm for Large-scale Graphs by Dimensionality Reduction</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@zhong2023]</div><div class="col-4">Force-Directed Graph Layouts Revisited: A New Force Based on the T-Distribution</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@miller2023]</div><div class="col-4">Spherical Graph Drawing by&nbsp;Multi-dimensional Scaling</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@meidiana2023]</div><div class="col-4">Shape-Faithful Graph Drawings</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(11, 110, 153);">almost proximity drawable graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">mesh graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">scale-free graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">strong proximity drawable graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(155, 154, 151);">weak proximity drawable graphs</div></div></div><br>


### Descriptions From Literature

From “[A Sparse Stress Model](https://dx.doi.org/10.7155/jgaa.00440)”:

> We conducted our experiments on a series of different graphs, see Tab. 1, most of them taken from the sparse matrix collection [9]. We selected these graphs as they differ in their structure and size, and are large enough to compare the results of different techniques. Two of the graphs, LeHavre and commanche, have predefined edge lengths that were derived from the node coordinates. We did not modify the graphs in any way, except for those that were disconnected, in which case we only kept the largest component.

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/SuiteSparse%20Matrix%20Collection%20b8772d6a2cbb456894b4673e32c6f956/Untitled.png' width='80%'></div>

From “[A Maxent-Stress Model for Graph Layout](https://doi.org/10.1109/TVCG.2012.299)”:

> With the exception of graph gd, which is an author collaboration graph of the International Symposium on Graph Drawing between 1994 and 2007, the graphs used are from the University of Florida Sparse Matrix Collection [9]. Our selection covers a range of graph sizes, and includes mesh-like and other nonmesh graphs, and graphs from Brandes and Pich's experimental study of distance scaling [5].

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/SuiteSparse%20Matrix%20Collection%20b8772d6a2cbb456894b4673e32c6f956/Untitled%201.png' width='80%'></div>

**Table 2.** Test Graphs

From “[DRGraph: An Efficient Graph Layout Algorithm for Large-scale Graphs by Dimensionality Reduction](https://doi.org/10.1109/TVCG.2020.3030447)”:

> We perform experiments on a broad range of datasets selected from the University of Florida Sparse Matrix Collection [10] and tsNET [34] (Table 1).

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/SuiteSparse%20Matrix%20Collection%20b8772d6a2cbb456894b4673e32c6f956/Untitled%202.png' width='80%'></div>

**Table 1.** Test Datasets

### Example Figures

From “[The university of Florida sparse matrix collection](https://doi.org/10.1145/2049662.2049663)**”:**

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/SuiteSparse%20Matrix%20Collection%20b8772d6a2cbb456894b4673e32c6f956/Untitled%203.png' width='80%'></div>

**Fig. 13.** A sample of matrices from the Collection, for the purpose of illustrating the complexity and diversity of matrices arising in real applications

From “[DRGraph: An Efficient Graph Layout Algorithm for Large-scale Graphs by Dimensionality Reduction](https://doi.org/10.1109/TVCG.2020.3030447)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/SuiteSparse%20Matrix%20Collection%20b8772d6a2cbb456894b4673e32c6f956/Untitled%204.png' width='80%'></div>

**Fig. 8.** Visualizations of selected graph datasets using FR, KK, S.M., FM3, SFDP, PMDS, tsNET and DRGraph.

::: 

### Single Graphs

A number of papers used individual, **Single Graphs** for their experiments instead of a collection. These graphs have become popular because of their properties as individual graphs - see, for example, the <a href="#Enron" class="dataset-link">Enron</a> dataset below, a huge individual graph that has a large variance in node degree distribution. Many of these graphs are also available in other repositories - their locations are noted wherever known.

<a name="Enron"></a>

::: {.callout-note title="Enron" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("Enron")
```

<div id="named-list-Enron" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

Data made public by the Federal Energy Regulatory Commission when investigating Enron. It has had a few changes over time documented in the link provided as its source. The data is currently hosted by William W. Cohen from CMU on a webiste, and it is also hosted on SNAP. SNAP asks to cite the paper linked in Origin paper. Very high variance in node degrees. Data can be considered threaded and directed, although <a href="#SNAP" class="dataset-link">SNAP</a> provides a version of the network that is explicitly undirected. This dataset proves useful for evaluating algorithms that work on very large graphs, due to its very large size.

<div><b>Originally found at: </b><a href="https://www.cs.cmu.edu/~enron/">https://www.cs.cmu.edu/~enron/</a></div><br>
<div><b>Size: </b>The data consists of 150 Enron executives, who sent 500,000 messages between themselves.</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@Klimt2004IntroducingTE]</div><div class="col-8">Introducing the Enron Corpus</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@Tanahashi2015]</div><div class="col-4">An Efficient Framework for Generating Storyline Visualizations from Streaming Data</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">dynamic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">dynamic (discrete)</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><div class="row"><div class="col-4">[@vandenElzen2013]</div><div class="col-4">Reordering massive sequence views: Enabling temporal and structural analysis of dynamic networks</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">dynamic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">dynamic (discrete)</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><br>


### Descriptions from Literature

From “[Reordering massive sequence views: Enabling temporal and structural analysis of dynamic networks](https://doi.org/10.1109/PacificVis.2013.6596125)”:

> We cleaned the data set by removing duplicates, spam and only to contain internal communication between Enron employees annotated with employee function leaving us with 151 nodes (employees) and 21374 edges (emails). Visualization using a node-link diagram enables the identification of stronger connections (see Figure 9(a)). However, temporal patterns and the evolution of the network cannot be analysed. From the standard MSV (Figure 9(b)) it becomes somewhat clear that transaction density increases over time and we can distinguish between different phases. We cannot, however, see features and identify communities due to visual clutter

### Example Figures

From “[An Efficient Framework for Generating Storyline Visualizations from Streaming Data](https://doi.org/10.1109/TVCG.2015.2392771)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Enron%20ed3c62b92cf14a7b86c691ac3651dab3/Untitled.png' width='80%'></div>

From “[Reordering massive sequence views: Enabling temporal and structural analysis of dynamic networks](https://doi.org/10.1109/PacificVis.2013.6596125)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Enron%20ed3c62b92cf14a7b86c691ac3651dab3/Untitled%201.png' width='80%'></div>

<!-- === STOP RENDERING ===

[https://www.cs.cmu.edu/~enron/](https://www.cs.cmu.edu/~enron/)

150 enron executives (users), 500k messages - many more employees

some have attachments

case nodes are users: could be a very connected dataset (perhaps too few nodes) - very high variance in node degree

case nodes are messages: could be a sparsely connected graph

there’s dates → can be layered

This dataset was collected and prepared by the

[CALO Project](http://www.ai.sri.com/project/CALO)

(A Cognitive Assistant that Learns and Organizes). It contains data from about 150 users, mostly senior management of Enron, organized into folders. The corpus contains a total of about 0.5M messages. This data was originally

[made public, and posted to the web](http://www.salon.com/news/feature/2003/10/14/enron/index_np.html)

, by the

[Federal Energy Regulatory Commission](http://www.ferc.gov/)

during its investigation.

The email dataset was later purchased by [Leslie Kaelbling](http://www.ai.mit.edu/people/lpk/lpk.html) at MIT, and turned out to have a number of integrity problems. A number of folks at SRI, notably [Melinda Gervasio](http://www.ai.sri.com/people/gervasio), worked hard to correct these problems, and it is thanks to them (not me) that the dataset is available. The dataset here does not include attachments, and some messages have been deleted "as part of a redaction effort due to requests from affected employees". Invalid email addresses were converted to something of the form user@enron.com whenever possible (i.e., recipient is specified in some parse-able format like "Doe, John" or "Mary K. Smith") and to no_address@enron.com when no recipient was specified.

Visualizations from [https://www.kaggle.com/jamestollefson/enron-network-analysis](https://www.kaggle.com/jamestollefson/enron-network-analysis):

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Enron%20ed3c62b92cf14a7b86c691ac3651dab3/Untitled%202.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Enron%20ed3c62b92cf14a7b86c691ac3651dab3/Untitled%203.png' width='80%'></div>

This paper definitely uses this as a layered, categorical graph - could even be a hypergraph


→ unclear. Layered? -->

::: 

<a name="California"></a>

::: {.callout-note title="California" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("California")
```

<div id="named-list-California" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

Data contains links related to an online search of the word “California” as nodes - the edges are links between webpages. We found this dataset on the webpage of a 2002 computer science course at Cornell, instructed by Jon Kleinberg. The original name was Pages that match the word “California”. They mention how the data was queried from a search engine, and that many of the original links are broken. It is not clear whether Kleinberg collected the data, or compiled it for the course.

<div><b>Originally found at: </b><a href="https://www.cs.cornell.edu/courses/cs685/2002fa/data/gr0.California">https://www.cs.cornell.edu/courses/cs685/2002fa/data/gr0.California</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9492e803e0c0c0f558b9d" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94da70c2b4d0ea138634b" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9700094a6be112912e9a5" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e48803e0c0b00558baa" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>4772 nodes, 8965 edges</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@Kleinberg_2002]</div><div class="col-8">The Structure of Information Networks</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@muelder2008b]</div><div class="col-4">A Treemap Based Method for Rapid Layout of Large Graphs</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">clusters (generated)</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@muelder2008]</div><div class="col-4">Rapid Graph Layout Using Space Filling Curves</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><br>

### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/California%20e0a841bc57c045b5a8514110cfe85635/degree_distr.svg' width='80%'></div>

### Descriptions from Literature

From [“A Treemap Based Method for Rapid Layout of Large Graphs](https://ieeexplore.ieee.org/document/4475481)”:

> This particular graph is a non-weighted graph of links between search results for the word “California” (also in Figures 6, 8, and 9, |V|=6107,|E|=15160).

From “[Rapid Graph Layout Using Space Filling Curves](https://ieeexplore.ieee.org/document/4658143)”:

> The “california” dataset (shown in Figures 5 and 8) consists of the links between the webpages found from a search for the word 'California' [4].

### Example Figures

From [“A Treemap Based Method for Rapid Layout of Large Graphs](https://ieeexplore.ieee.org/document/4475481)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/California%20e0a841bc57c045b5a8514110cfe85635/Untitled.png' width='80%'></div>

**Fig. 1.** *A graph laid out using our treemap based approach*. This graph portrays the links between websites that came from a search on the word “California” [7]. Nodes are clustered into a hierarchy, and laid out by applying a treemap to this hierarchy. Levels of the hierarchy below a threshold are clustered together into larger nodes. It can very easily be seen that there are three primary groups of websites that link to each other, and a plethora of others that are not as tightly linked.

From “[Rapid Graph Layout Using Space Filling Curves](https://ieeexplore.ieee.org/document/4658143)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/California%20e0a841bc57c045b5a8514110cfe85635/Untitled%201.png' width='80%'></div>

**Fig. 5** *Separating clusters.* By adjusting the spacing between nodes according to the clustering information, clusters can be separated.

<!-- == STOP RENDERING ==

[https://www.cs.cornell.edu/courses/cs685/2002fa/data/gr0.California](https://www.cs.cornell.edu/courses/cs685/2002fa/data/gr0.California) -->

::: 

::: {.callout-note title="World Greenhouse Gas Emissions" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("World_GreenhouseGasEmissions")
```

<div id="named-list-World_GreenhouseGasEmissions" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

Data collected by the [WRI](https://www.wri.org/). Linked data is from a different year than the data used by [Optimal Sankey Diagrams Via Integer Programming](https://doi.org/10.1109/PacificVis.2018.00025), for which data could not be found. Contains <span class="pill-tag pill-tag-weighted-edges">weighted edges</span>, <span class="pill-tag pill-tag-weighted-nodes">weighted nodes</span>, <span class="pill-tag pill-tag-categorical-nodes">categorical nodes</span>, and <span class="pill-tag pill-tag-layers">layers</span>. 

<div><b>Originally found at: </b><a href="https://www.wri.org/data/world-greenhouse-gas-emissions-2005
">https://www.wri.org/data/world-greenhouse-gas-emissions-2005
</a><a href="https://www.wri.org/search?keys=world%20greenhouse%20gas%20emissions&amp;f%5B0%5D=content_type%3Adata
">https://www.wri.org/search?keys=world%20greenhouse%20gas%20emissions&amp;f%5B0%5D=content_type%3Adata
</a><a href="https://github.com/lhc70000/sankey/tree/master">https://github.com/lhc70000/sankey/tree/master</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9493c803e0c0c0c558ba6" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94d8b803e0c0c1f558cb4" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971484cf748115a055875" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90eb2803e0c0b03558c69" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>40 nodes, 85 edges</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@navigating_numbers]</div><div class="col-8">Navigating the Numbers: Greenhouse Gas Data and International Climate Policy</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@zarate2018]</div><div class="col-4">Optimal Sankey Diagrams via Integer Programming</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(11, 110, 153);">clusters (pre-existing)</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><br>

### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/World%20Greenhouse%20Gas%20Emissions%20859aab42a55e43ac9dad1eae1a91a534/degree_distr.svg' width='80%'></div>

### Descriptions from Literature

> We have tested our method on the “World Greenhouse Gas Emissions” data from the World Resources Institute [8]. After transforming the “long” edges of the graph into “short” edges and adding the corresponding dummy nodes, as described in Section 3, this example has 4 layers, 55 nodes and 100 edges. The node ordering in the layout of the Sankey diagram shown in Figure 1 has been computed using Sugiyama’s heuristic method [13].

### Example Figures

From [Optimal Sankey Diagrams via Integer Linear Programming](https://doi.org/10.1109/PacificVis.2018.00025):

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/World%20Greenhouse%20Gas%20Emissions%20859aab42a55e43ac9dad1eae1a91a534/Screen_Shot_2023-08-09_at_11.13.23_AM.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/World%20Greenhouse%20Gas%20Emissions%20859aab42a55e43ac9dad1eae1a91a534/Screen_Shot_2023-01-21_at_2.59.58_PM.png' width='80%'></div>

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/World%20Greenhouse%20Gas%20Emissions%20859aab42a55e43ac9dad1eae1a91a534/Screen_Shot_2023-01-21_at_3.00.19_PM.png' width='80%'></div>
127.0.0.1:5501:150:21

::: 

::: {.callout-note title="Chess Games" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("Chess_Games")
```

<div id="named-list-Chess_Games" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

20,058 chess openings from games in a database of played online chess games. The authors of “Sequence Braiding: Visual Overviews of Temporal Event Sequences and Attributes” collected the dataset online from the data science platform kaggle. The dataset was collected by user Mitchell J. and collects data from the chess website Lichess.org. The data used in the literature focuses on the 200 most common openings. These are all sequences of 6 moves and are topologically equivalent. It is a layered graph with <span class="pill-tag pill-tag-categorical-nodes">categorical nodes</span> and <span class="pill-tag pill-tag-layers">layers</span>, and can be seen as a <span class="pill-tag pill-tag-temporal">temporal event sequence</span>.

<div><b>Originally found at: </b><a href="https://www.kaggle.com/datasets/datasnaek/chess?resource=download
">https://www.kaggle.com/datasets/datasnaek/chess?resource=download
</a><br><a href="https://github.com/VisDunneRight/sequence_braiding/blob/master/data/chess.json">https://github.com/VisDunneRight/sequence_braiding/blob/master/data/chess.json</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d948ae4cf74810580556b8" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96e1b0c2b4d0f65386312" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9705494a6be112912e9d0" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90eed4cf7480eef055740" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>The data consists of 20058 sequences, which result in a disconnected graph of 118164 nodes, and  98106 edges.</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@Jolly_2017]</div><div class="col-8">Chess Game Dataset (Lichess)</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@Bartolomeo2021]</div><div class="col-4">Sequence Braiding: Visual Overviews of Temporal Event Sequences and Attributes</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">dynamic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">dynamic (discrete)</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><br>

### Descriptions from Literature

From “[Sequence Braiding: Visual Overviews of Temporal Event Sequences and Attributes](https://doi.org/10.1109/TVCG.2020.3030442)”:

> 200 Chess openings displayed with Sequence Braiding. Each line represents a sequence of moves of the white player, each group is a chess piece type. Most openings start with a pawn, and very little with the knight.

### Example Figures

From “[Sequence Braiding: Visual Overviews of Temporal Event Sequences and Attributes](https://doi.org/10.1109/TVCG.2020.3030442)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Chess%20Games%20023a47d6ae914567a05132ac1dfbe972/Screen_Shot_2023-01-21_at_2.15.02_PM.png' width='80%'></div>

**Fig. 7.** 200 Chess openings displayed with Sequence Braiding. Each line represents a sequence of moves of the white player, each group is a chess piece type. Most openings start with a pawn, and very little with the knight. After moving a pawn, it is common to move a knight or a pawn, it is a little less common to move a bishop, and only a little number of openings move the queen on the second move.

::: 

<a name="Tree_ofLife"></a>

::: {.callout-note title="Tree of Life" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("Tree_ofLife")
```

<div id="named-list-Tree_ofLife" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

Part of the <a href="http://tolweb.org/tree/to ">http://tolweb.org/tree/to </a>characterize information about biodiversity and their evolutionary genealogy. It is a tree <span class="pill-tag pill-tag-tree">tree</span> with <span class="pill-tag pill-tag-categorical-nodes">categorical nodes</span>.

<div><b>Originally found at: </b><a href="https://www.kaggle.com/datasets/konivat/tree-of-life?resource=download">https://www.kaggle.com/datasets/konivat/tree-of-life?resource=download</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9492294a6be103312e71d" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96dfb4cf748115a0556b0" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971350c2b4d0f65386558" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e404cf7480eec0555fd" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>35,960 nodes, 35,959 edges</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@gkab301]</div><div class="col-8">Interactive Tree Of Life (iTOL) v5: an online tool for phylogenetic tree display and annotation</div></div><div class="row"><div class="col-4">[@maddison2007]</div><div class="col-8">The Tree of Life Web Project</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@gray2023]</div><div class="col-4">Visualizing Evolving Trees</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">dynamic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">dynamic (discrete)</div></div></div><br>

### Descriptions from Literature

From “[Visualizing Evolving Trees](https://link.springer.com/chapter/10.1007/978-3-031-22203-0_23)”:

> **The Tree of Life:** captures the evolutionary progression of life on Earth [[37](https://link.springer.com/chapter/10.1007/978-3-031-22203-0_23#ref-CR37)]. The underlying data is a tree structure with a natural time component. As a new species evolves, a new node in the tree is added. The edges give the parent-child relation of the nodes, where the parent is the original species, and the child is the new species. We use a subset of this graph with 500 nodes. The maximum node degree of this tree is 5, and the radius is 24

### Example Figures

From “[Visualizing Evolving Trees](https://link.springer.com/chapter/10.1007/978-3-031-22203-0_23)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Tree%20of%20Life%20cb0493d6b6da4a73a979f06225983011/Untitled.png' width='80%'></div>

**Fig. 4.** Layouts obtained by the seven methods for the tree of life dataset.

<!-- == STOP RENDERING ==

From:

[http://tolweb.org/tree/](http://tolweb.org/tree/) -->

::: 

<a name="World_BankTradeData"></a>

::: {.callout-note title="World Bank Trade Data" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("World_BankTradeData")
```

<div id="named-list-World_BankTradeData" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

Bilateral trade value in 1999 (total imports+exports), from [wits.worldbank.org](https://wits.worldbank.org/module/ALL/sub-module/ALL/reporter/ALL/year/ALL/tradeflow/ALL/pagesize/50/page/1). It is <span class="pill-tag pill-tag-dense">dense</span> and has <span class="pill-tag pill-tag-categorical-nodes">categorical nodes</span>.

<div><b>Originally found at: </b><a href="https://wits.worldbank.org/module/ALL/sub-module/ALL/reporter/ALL/year/ALL/tradeflow/ALL/pagesize/50/page/1">https://wits.worldbank.org/module/ALL/sub-module/ALL/reporter/ALL/year/ALL/tradeflow/ALL/pagesize/50/page/1</a></div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d949494cf7481075055615" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96d610c2b4d0f6438622a" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d970654cf748115a0557d4" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e390c2b4d0d2e386256" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<br>
<div><b>Size: </b>194 nodes, 10080 edges</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@SUBRAMANIAN2007151]</div><div class="col-8">The WTO promotes trade strongly but unevenly</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@noack2004]</div><div class="col-4">Energy Models for Graph Clustering</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">clusters (generated)</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@nocaj2015]</div><div class="col-4">Untangling the Hairballs of Multi-Centered Small-World Online Social Media Networks</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><br> 


### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/World%20Bank%20Trade%20Data%20e6e54a00bc574c639cfa165458c71232/degree_distr.svg' width='80%'></div>

### Descriptions from Literature

From “[Energy Models for Graph Clustering](https://doi.org/10.1007/978-3-540-24595-7_40)”:

> The difference between conventional energy models, node-repulsion LinLog, and edge-repulsion LinLog can be illustrated with a model of the trade between ten North American and European countries. The nodes of the graph correspond to the countries, and the edge weights specify the trade volume between each pair of countries. Because of geographical closeness and free trade agreements, countries on the same continent trade more intensively than countries on different continents. Figure 1 shows the minimum energy layouts of the trade graph for the three force and energy models. The layout of the widely used Fruchterman-Reingold model [20] does not show any clear groups at all. The layout of the node-repulsion LinLog energy model groups the countries (nodes) primarily according to their total trade volume (degree). Only the layout of the edge-repulsion LinLog energy model shows the expected grouping according to continents.

### Example Figures

From “[Untangling the Hairballs of Multi-Centered Small-World Online Social Media Networks](https://doi.org/10.7155/jgaa.00370)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/World%20Bank%20Trade%20Data%20e6e54a00bc574c639cfa165458c71232/Screen_Shot_2023-08-17_at_5.17.54_PM.png' width='80%'></div>

From “[Energy Models for Graph Clustering](https://doi.org/10.1007/978-3-540-24595-7_40)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/World%20Bank%20Trade%20Data%20e6e54a00bc574c639cfa165458c71232/Screen_Shot_2023-08-17_at_5.13.41_PM.png' width='80%'></div>

<!-- === STOP RENDERING ===

world bank: [www.worldbank.org](http://www.worldbank.org/) -->

::: 

<a name="Investment_Interdependence"></a>

::: {.callout-note title="Investment Interdependence" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("Investment_Interdependence")
```

<div id="named-list-Investment_Interdependence" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

Data collected in a survey of Ohio State University students by D. W. Malone. Students were presented with two potential obstacles to investment in Columbus, Ohio’s business district and asked, “does obstacle A aggravate or intensify obstacle B?”. Contains <span class="pill-tag pill-tag-directed">directed edges</span> and is <span class="pill-tag pill-tag-hierarchical">hierarchical</span>.

<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d949164cf7481076055631" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96e4d803e0c0caf558b9f" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d97042803e0c0cb3558c35" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d90e6794a6be0ebd12e705" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>25 nodes, 30 edges</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@malone1975]</div><div class="col-8">An introduction to the application of interpretive structural modeling</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@Sugiyama1981]</div><div class="col-4">Methods for Visual Understanding of Hierarchical System Structures</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(11, 110, 153);">hierarchical</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><br>

### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Investment%20Interdependence%20141028dac1c34b6dbb69710ea5c7ee10/two_in_one.svg' width='80%'></div>

### Description from Literature

From [Methods for Visual Understanding of Hierarchical System Structures](https://ieeexplore.ieee.org/document/4308636):

> Presented in Fig. 5 are drawings of the nine-level hierarchy which appeared in Malone [11] and represent the interdependence of obstacles to investment in the Columbus, Ohio, central business district.

### Example Figures

From [Methods for Visual Understanding of Hierarchical System Structures](https://ieeexplore.ieee.org/document/4308636):

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Investment%20Interdependence%20141028dac1c34b6dbb69710ea5c7ee10/Untitled.png' width='80%'></div>

**Fig. 5. (cropped):** Maps of the nine-level hierarchy [11]. (a) Initial. (b) BC + QP
methods (c = 1.0). (c) BC + QP methods (cL= 0.5). (d) BC + QP methods
(c = 0.05). (e) BC + PR methods.

::: 

<a name="Protein_Interactions"></a>

::: {.callout-note title="Protein Interactions" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("Protein_InteractionsPublications")
```

<div id="named-list-Protein_InteractionsPublications" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

Protein Interaction Publications were collected from the [Biological Pathway Commons Database](http://www.pathwaycommons.org/).
Various types of protein interaction graphs are recorded in other network collections. We highlight two of them from the surveyed papers. First, we have the temporal Protein Interaction Publications, showing the history of how protein interactions were described in the literature. Second, the Protein Homology graph was provided by the Large Graph Layout project, their links are now broken and the dataset lost.  Nonetheless, [SNAP](@SNAP) and [Konect](http://konect.cc/networks/) both also have various dataset of human/other species protein interactions. 

<div><b>Originally found at: </b><a href="https://github.com/CreativeCodingLab/TimeArcs/tree/master/IndexCards">https://github.com/CreativeCodingLab/TimeArcs/tree/master/IndexCards
</a><a href="https://lgl.sourceforge.net/ ">https://lgl.sourceforge.net/ </a>(download link broken)</div><br>
<div><b>Download formatted data: </b><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d9487494a6be101c12e7a5" class="btn btn-secondary btn-sm skinny-button"> GEXF</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d96cd4803e0c0ca9558d2b" class="btn btn-secondary btn-sm skinny-button"> GML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d971704cf748115a055882" class="btn btn-secondary btn-sm skinny-button"> GRAPHML</a><a href="https://files.osf.io/v1/resources/j7ucv/providers/osfstorage/64d94abc0c2b4d0e8d38629c" class="btn btn-secondary btn-sm skinny-button"> JSON</a></div><br>
<div><b>Size: </b>2961 nodes, 5267 edges</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@ADAI2004179]</div><div class="col-8">LGL: Creating a Map of Protein Function with an Algorithm for Visualizing Very Large Biological Networks</div></div>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@muelder2008]</div><div class="col-4">Rapid Graph Layout Using Space Filling Curves</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@Dang2016]</div><div class="col-4">TimeArcs: Visualizing Fluctuations in Dynamic Networks</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">dynamic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(100, 71, 58);">dynamic (discrete)</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">layered graphs</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(173, 26, 114);">n-layers</div></div></div><br>

## Protein Interaction Publications

### Statistics

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Protein%20Interactions%20(Publications)%20fb5bc3bb0c5d40468da36d279a114a78/degree_distr.svg' width='80%'></div>

### Description from the Literature

From [TimeArcs: Visualizing Fluctuations in Dynamic Networks](https://onlinelibrary.wiley.com/doi/10.1111/cgf.12882):

> The data contains the publication information (such as publication year, author, and textual evidence) of interactions between pairs of proteins, as well as their specific interaction type.

> When there are multiple arcs connecting two proteins, it falls into one of the two circumstances. If they have the same color, these arcs indicate that there are supporting evidences in different publications which *confirm* the interaction between two elements. On the other hand, if they have the different colors, the more recent appearance provides either more detailed knowledge about the interaction or shows a *conflict* between different articles regarding the way in which these proteins interact.

### Example Figures

From [TimeArcs: Visualizing Fluctuations in Dynamic Networks](https://onlinelibrary.wiley.com/doi/10.1111/cgf.12882):

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Protein%20Interactions%20(Publications)%20fb5bc3bb0c5d40468da36d279a114a78/Untitled.png' width='80%'></div>

**Fig. 10**: TimeArcs visualization for interactions around PCAF protein. (1), (2), and (3) in the figure are supporting evidences in literature of “PCAF binds MAML”. 

## Protein Homology (Lost)

### Description from the Literature

From [Rapid Graph Layout Using Space Filling Curves:](https://ieeexplore.ieee.org/document/4658143\)

> The “pgraph” dataset (shown in Figures 2 and 6) is a protein homology graph, which is relatively dense [7].

Consists of 28, 854 vertices and 1,180, 816 edges, found in Table 1 of paper above. 

### Example Figures

From [Rapid Graph Layout Using Space Filling Curves:](https://ieeexplore.ieee.org/document/4658143)

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Protein%20Interactions%20(Publications)%20fb5bc3bb0c5d40468da36d279a114a78/Untitled%201.png' width='80%'></div>

**Fig. 2.** *A protein homology graph laid out with our space filling curve based approach.* Color corresponds to depth in the clustering hierarchy. |*V*| = 28, 854,|*E*| = 1, 180, 816

From [LGL: Creating a Map of Protein Function with an Algorithm for Visualizing Very Large Biological Networks](https://www.sciencedirect.com/science/article/pii/S0022283604004851)

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Protein%20Interactions%20(Publications)%20fb5bc3bb0c5d40468da36d279a114a78/Untitled%202.png' width='80%'></div>

**Fig. 3.** The complete protein homology map. A layout of the entire protein homology map; a total of 11,516 connected sets containing 111,604 proteins (vertices) with 1,912,684 edges. The largest connected set is shown more clearly in the inset and is enlarged further in [Figure 4](https://www.sciencedirect.com/science/article/pii/S0022283604004851?via%3Dihub#FIG4).

<!-- == STOP RENDERING ==
broken link referenced in [**Rapid Graph Layout Using Space Filling Curves**](../Benchmark%20sets%200cc6b5e454304aec98f3b59b1a720476/Literature%20ad87f14e7097454fb2f784e2c8a2797a/Literature%20-%20Algorithm%2012e01bfc60a84007aa7d2d34293e123d/Rapid%20Graph%20Layout%20Using%20Space%20Filling%20Curves%2010601cd6078a4ea18b17c7d40eda0041.md) : 

Same link referenced in original paper, 

I also found [https://lgl.sourceforge.net/](https://lgl.sourceforge.net/) which contains the link to supposedly download the dataset but it is also broken

Reached out to author - Alex Adai 

[](http://www.marcottelab.org/index.php/OldBioinformaticsServerlgl/) -->

::: 

### Aggregate Collections

Many papers used graphs from specific domains that contain particular characteristics (e.g., geographical coordinates are often found in airline data). Instead of collecting each one of these individual, contextual datasets, we aggregated them in further subcategories, and called them **Aggregate collections**. Individual information about about each aggregate collection can be found in the papers that contain them.

::: {.callout-note title="Assorted Collaboration Network" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Assorted_CollaborationNetwork")
```

<div id="named-list-Assorted_CollaborationNetwork" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Airlines, Migrations, and Air Traffic" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("Airlines_MigrationsandAirTraffic")
``` -->

<div id="named-list-Airlines_MigrationsandAirTraffic" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Code Dependency Graphs" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Code_DependencyGraphs")
```

<div id="named-list-Code_DependencyGraphs" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Blogposts, Tweets, and Forums" collapse=true appearance="minimal"}

<!-- ```{ojs}
//| echo: false

make_sparkline("Blogposts_TweetsandForums")
``` -->

<div id="named-list-Blogposts_TweetsandForums" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Social Networks" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Social_Networks")
```

<div id="named-list-Social_Networks" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Transportation Networks" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Transportation_Networks")
```

<div id="named-list-Transportation_Networks" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

### Subsets of other collections

Finally, we collected some datasets that we noticed being subsets of existing collections. This is a phenomenon that can happen through the years, through the redistribution and through the merging of different sources: the Walshaw dataset, for instance, was and still is distributed and cited as its own standalone dataset, but its graphs can be found as part of many other larger collections, such as SNAP. We classified these datasets as **Subsets**.

<a name="Walshaw"></a>

::: {.callout-note title="Walshaw" collapse=true collapse-id="Walshaw" appearance="minimal"}

C. Walshaw, collected for an archive of graph partitions which has been maintained since 2000.  These are multilevel mesh partitions of heterogeneous networks from a variety of domains.

We do not provide the the data ourselves. Walshaw requests to be emailed for the distribution of the data, and so we link to their site and to the graphs found in the SuiteSparse Matrix Collection.

<!-- ```{ojs}
//| echo: false

make_sparkline("Walshaw")
```

<div id="named-list-Walshaw" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div> -->

<div><b>Originally found at: </b><a href="https://chriswalshaw.co.uk/partition/ ">https://chriswalshaw.co.uk/partition/ </a>where C. Walshaw requests to be emailed for the dataset at mailto:c.walshaw@gre.ac.uk. the individual graphs can also be found on the SuiteSparse Matrix Collection under different groups. 
</div><br>
<div><b>Size: </b>34 graphs, 2395-448695 nodes, 6837-3314611 edges. Node-weighted, edge-weighted. Partitions of the 34 graphs are given with various partition sizes and imbalance percentages.</div><br>
<div><b>Origin paper: </b></div><div class="row"><div class="col-4">[@soper_combined_2004]</div><div class="col-8">A Combined Evolutionary Search and Multilevel Optimisation Approach to Graph Partitioning</div></div><div class="row"><div class="col-4">[@walshaw2000]</div><div class="col-8">Mesh Partitioning: a Multilevel Balancing and Refinement Algorithm</div></div><br>
<div><b>Usage examples: </b></div><div class="row"><div class="col-4">[@walshaw2001]</div><div class="col-4">A Multilevel Algorithm for Force-Directed Graph Drawing</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(223, 171, 1);">clusters (generated)</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@frishman2007]</div><div class="col-4">Multi-Level Graph Layout on the GPU</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@koren2002]</div><div class="col-4">ACE: A Fast Multiscale Eigenvectors Computation for Drawing Huge Graphs</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@KOREN20051867]</div><div class="col-4">Drawing graphs by eigenvectors: theory and practice</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4">[@civril2006]</div><div class="col-4">SDE: Graph Drawing Using Spectral Distance Embedding</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4"></div><div class="col-4">Efficient and High Quality Force-Directed Graph Drawing</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div></div></div><div class="row"><div class="col-4"></div><div class="col-4">Large-Graph Layout with the Fast Multipole Multilevel Method</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@Hachul2005]</div><div class="col-4">Drawing Large Graphs with a Potential-Field-Based Multilevel Algorithm</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@Eades2018]</div><div class="col-4">Drawing Big Graphs Using Spectral
Sparsification</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@Hachul2006]</div><div class="col-4">An Experimental Comparison of Fast Algorithms for Drawing General Large Graphs</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@brandes2006]</div><div class="col-4">Eigensolver methods for progressive multidimensional scaling of large data</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@Gansner2005b]</div><div class="col-4">Topological fisheye views for visualizing large graphs</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">generic</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">high degree</div><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><div class="row"><div class="col-4">[@Frishman2008]</div><div class="col-4">Online Dynamic Graph Drawing</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(217, 115, 13);">dynamic</div></div></div><div class="row"><div class="col-4">[@Hong2019]</div><div class="col-4">Multi-level Graph Drawing Using Infomap Clustering</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(105, 64, 165);">multilevel</div></div></div><div class="row"><div class="col-4"></div><div class="col-4">A Random Sampling O</div><div class="col-4"></div></div><div class="row"><div class="col-4">[@meidiana2020]</div><div class="col-4">Sublinear Time Force Computation for Big Complex Network Visualization</div><div class="col-4"><div class="rounded-pill badge" style="margin: 2px; background-color: rgb(224, 62, 62);">large</div></div></div><br>


### Descriptions from Literature

From “[An Experimental Comparison of Fast Algorithms for Drawing General Large Graphs](https://link.springer.com/chapter/10.1007/11618058_22)”:

> The rest of the test graphs are taken from real-world applications. In particular, we selected graphs from the AT&T graph library [1], from C. Walshaw’s graph collection [20], and a graph that describes a social network of 2113 people that we obtained from C. Lipp.

From “[A Combined Evolutionary Search and Multilevel Optimisation Approach to Graph-Partitioning](https://doi.org/10.1023/B:JOGO.0000042115.44455.f3)”:

> The test graphs have been chosen to be a representative sample of small to medium scale real-life problems (mostly mesh-based) and include both 2D and 3D examples of nodal graphs (where the mesh nodes are partitioned) and dual graphs (where the mesh elements are partitioned). In addition there is a 3D semi-structured graph, cti, which is unstructured in the x−y plane but extended regularly along the z-axis. Finally the test suite includes three non mesh-based graphs (add32, vibrobox, bcsstk32) which arise from various scientific computing applications2. None of the graphs have either vertex or edge weights; such graphs are not widely available since most applications do not accurately instrument costs and it is difficult to draw meaningful conclusions from the few examples that we have access to.

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Walshaw%20e40b37a1147942d89ff1d8dfad285256/Untitled.png' width='80%'></div>

### Example Figures

From “[An Experimental Comparison of Fast Algorithms for Drawing General Large Graphs](https://link.springer.com/chapter/10.1007/11618058_22)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Walshaw%20e40b37a1147942d89ff1d8dfad285256/Untitled%201.png' width='80%'></div>

From “[Multi-Level Graph Layout on the GPU](https://doi.org/10.1109/TVCG.2007.70580)”:

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Walshaw%20e40b37a1147942d89ff1d8dfad285256/Untitled%202.png' width='80%'></div>

**Fig. 11.** 4elt. Red: our layout, black: Kamada-Kawai layout

### Other

From *[Group DIMACS10 in the SuiteSparse Matrix Collection](https://sparse.tamu.edu/DIMACS10)*:

```
Chris Walshaw's graph partitioning archive contains 34 graphs that
    have been very popular as benchmarks for graph partitioning algorithms
    ( http://staffweb.cms.gre.ac.uk/~wc06/partition/ ).

    17 of them are already in the UF Collection.  Only the 17 new graphs
    not yet in the collection are added here in the DIMACS10 set.

DIMACS10 graph:                 new?   UF matrix:
    ---------------                 ----   -------------
    walshaw/144                      *     DIMACS10/144
    walshaw/3elt                           AG-Monien/3elt
    walshaw/4elt                           Pothen/barth5
    walshaw/598a                     *     DIMACS10/598a
    walshaw/add20                          Hamm/add20
    walshaw/add32                          Hamm/add32
    walshaw/auto                     *     DIMACS10/auto
    walshaw/bcsstk29                       HB/bcsstk29
    walshaw/bcsstk30                       HB/bcsstk30
    walshaw/bcsstk31                       HB/bcsstk31
    walshaw/bcsstk32                       HB/bcsstk32
    walshaw/bcsstk33                       HB/bcsstk33
    walshaw/brack2                         AG-Monien/brack2
    walshaw/crack                          AG-Monient/crack
    walshaw/cs4                      *     DIMACS10/cs4
    walshaw/cti                      *     DIMACS10/cti
    walshaw/data                     *     DIMACS10/data
    walshaw/fe_4elt2                 *     DIMACS10/fe_4elt2
    walshaw/fe_body                  *     DIMACS10/fe_body
    walshaw/fe_ocean                 *     DIMACS10/fe_ocean
    walshaw/fe_pwt                         Pothen/pwt
    walshaw/fe_rotor                 *     DIMACS10/fe_rotor
    walshaw/fe_sphere                *     DIMACS10/fe_sphere
    walshaw/fe_tooth                 *     DIMACS10/fe_tooth
    walshaw/finan512                       Mulvey/finan512
    walshaw/m14b                     *     DIMACS10/m14b
    walshaw/memplus                        Hamm/memplus
    walshaw/t60k                     *     DIMACS10/t60k
    walshaw/uk                       *     DIMACS10/uk
    walshaw/vibrobox                       Cote/vibrobox
    walshaw/wave                           AG-Monien/wave
    walshaw/whitaker3                      AG-Monien/whitaker3
    walshaw/wing                     *     DIMACS10/wing
    walshaw/wing_nodal               *     DIMACS10/wing_nodal
```

<!-- === STOP RENDERING ===

Made explicit that they want people to reach out to them for the dataset so we do not collect it. Also in Suite Sparse, and many of the graphs are included in the Scotch graph collection.

From: [An Experimental Comparison of Fast Algorithms for Drawing General Large Graphs](https://link.springer.com/chapter/10.1007/11618058_22)

<div style='text-align: center'><img src='data/Benchmark datasets 64e0439269f9497799025562a4087ce1/Walshaw%20e40b37a1147942d89ff1d8dfad285256/Untitled%203.png' width='80%'></div>

Graphs found on the Sparse Matrix Collection -->

::: 

::: {.callout-note title="Pert DAG" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Pert_DAG")
```

<div id="named-list-Pert_DAG" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

<a name="amazon"></a>

::: {.callout-note title="Amazon" collapse=true appearance="minimal"} 

```{ojs}
//| echo: false

make_sparkline("Amazon")
```

<div id="named-list-Amazon" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Autonomous System Network" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Autonomous_SystemNetwork")
```

<div id="named-list-Autonomous_SystemNetwork" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Control Flow Graphs" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Control_FlowGraphs")
```

<div id="named-list-Control_FlowGraphs" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

### Lost and unavailable datasets

Unfortunately, some of the datasets that were used in the papers in our corpus are lost, or not available anymore. While we did go through the effort, for each one of them, to recover them and store them on OSF, we could not find anywhere the following list of datasets:

::: {.callout-note title="GION" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("GION")
```

<div id="named-list-GION" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="FM3" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("FM3")
```

<div id="named-list-FM3" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Padia Stories" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Padia_Stories")
```

<div id="named-list-Padia_Stories" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Internet Mapping Project" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Internet_MappingProject")
```

<div id="named-list-Internet_MappingProject" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Mathematics Genealogy" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Mathematics_Genealogy")
```

<div id="named-list-Mathematics_Genealogy" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Medical Patient Records" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Medical_PatientRecords")
```

<div id="named-list-Medical_PatientRecords" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Assorted Fiscal Network" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Assorted_FiscalNetwork")
```

<div id="named-list-Assorted_FiscalNetwork" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Debates" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Debates")
```

<div id="named-list-Debates" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Car Features" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Car_Features")
```

<div id="named-list-Car_Features" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

::: {.callout-note title="Business Processes" collapse=true appearance="minimal"}

```{ojs}
//| echo: false

make_sparkline("Business_Processes")
```

<div id="named-list-Business_Processes" data-bs-spy="scroll"  data-bs-target="db-nav-list" data-bs-offset="20" tabindex="0"></div>

::: 

### Custom-made datasets
In the data we collected, we also found several instances of custom-made datasets. We consider custom-made datasets either edits to pre-existing datasets, where the authors found it necessary to either split or modify the dataset in a particular way, or datasets completely made up from scratch using random generators or custom-made code. This can happen in cases where the authors of a paper needed a dataset containing particular characteristics which was not easy to find in the wild, so a new dataset was crafted.

For instance, consider the case where the authors of a paper develop an algorithm that works on hypergraphs. They want to test that the algorithm works, and test its performance on hypergraphs of various sizes, but datasets containing hypergraphs are difficult to find. For this reason, the authors craft one dataset synthetically, or take a pre-existing dataset and edit it so that it now contains hyperedges. 

We split custom-made datasets in three categories, with their occurrences in the corpus of papers illustrated below:

```{ojs}
//| echo: false
{ 
  let d = []
  
  let allbenchmarkdatasets = [...new Set(literature.map(l => l["Dataset tag clean"].split(",").map(d => d.trim())).flat())].filter(a => a != "")

  for (let dataset of allbenchmarkdatasets){
    if (!dataset.includes("Custom")) continue;
    let literature_entries_with_this_dataset = literature.filter(l => l["Dataset tag clean"].includes(dataset))

    d.push({"dataset": dataset, "count": literature_entries_with_this_dataset.length})
  }
  
  return Plot.plot({
    color: {
      // legend: true,
      type: "categorical",
      // domain: d3.range(10).map((d, i) => `Category ${i + 1}`),
      scheme: "Tableau10" // use the "accent" scheme
    },
    y: {
      // tickFormat: "s"
    },
    marks: [
      Plot.barX(d, {x: "count", y: "dataset", fill: "dataset",inset: 2, sort: {y: "x", reverse: true}}),
      Plot.axisY({label: null, lineWidth: 12, marginLeft: 150}),
    ]
  })
}
```

**Replicable** datasets indicate cases where the authors have given enough information so that the experiment can be replicated exactly as it was run by the authors of a paper, or closely enough that the results obtained reflect the published ones very closely. This includes cases where either the authors published the entire dataset they used, they published the code they used to generate the dataset, or include an exact description of the steps they took to generate it.

**Reproducible** datasets are cases where the authors described the steps they took to generate and/or edit their datasets, but not in-depth enough so that the exact same graphs can be reproduced, and did not redistribute it. Results can still be reproduces somewhat closely if the authors took care to report enough information about their graphs.

For **non-replicable** datasets, we indicate cases where the authors did not distribute their datasets and did not include enough information in the paper so that their results could be replicated. 

This information is closely tied to the distribution of supplemental material in papers, that is shown in the chart below:

```{ojs}
//| echo: false
{ 
  let d = []
  
  let allbenchmarkdatasets = [...new Set(literature.map(l => l["Supplemental material (Multi-select)"].split(",").map(d => d.trim())).flat())].filter(a => a != "")

  for (let dataset of allbenchmarkdatasets){
    let literature_entries_with_this_dataset = literature.filter(l => l["Supplemental material (Multi-select)"].includes(dataset))

    d.push({"dataset": dataset, "count": literature_entries_with_this_dataset.length})
  }
  
  return Plot.plot({
    color: {
      // legend: true,
      type: "categorical",
      // domain: d3.range(10).map((d, i) => `Category ${i + 1}`),
      scheme: "Tableau10" // use the "accent" scheme
    },
    y: {
      // tickFormat: "s"
    },
    marks: [
      Plot.barX(d, {x: "count", y: "dataset", fill: "dataset",inset: 2, sort: {y: "x", reverse: true}}),
      Plot.axisY({label: null, lineWidth: 12, marginLeft: 150}),
    ]
  })
}
```

This discussion is part of a larger discourse on research replicability, that is gaining traction in the scientific community. The ACM, for instance, has a policy on artifact review and badging, where authors are encouraged to submit their artifacts for review, and if they pass, they receive a badge that indicates the artifact is available for review. This is a step towards making research more replicable and reproducible, and we hope that our work will contribute to this effort. 

See, e.g., ACM's definitions at [https://www.acm.org/publications/policies/artifact-review-and-badging-current](https://www.acm.org/publications/policies/artifact-review-and-badging-current).

```{ojs}
//| echo: false
function make_dataset_name_and_title_list(chosen_collection_type, include_num_graphs){ 
  let collection_type = benchmark_datasets.map(a => a["Type of Collection"]).filter(c => c == chosen_collection_type);
  let y_distance = 20;
  let svgwidth = 700;
  let numgraphs_offset = 40;

  const svg = d3.create('svg')
    .attr('width', svgwidth)
    .attr('height', y_distance * collection_type.length + 60);

  svg.append("text")
    .attr("x", svgwidth/2)
    .attr("y", 20)
    .attr("text-anchor", "middle")
    .style("font-weight", "bold")
    .text("List of datasets tagged as " + chosen_collection_type + " and their sources")

  svg.append("text")
      .attr("x", 200)
      .attr("y", 45)
      .style("text-anchor", "end")
      .style("font-size", "small")
      .style("fill", "#aaa")
      .text("Name")

  if (include_num_graphs) {
    svg.append("text")
        .attr("x", 240)
        .attr("y", 45)
        .style("text-anchor", "middle")
        .style("font-size", "small")
        .style("fill", "#aaa")
        .text("#Graphs")
  }

  svg.append("text")
      .attr("x", 320 - (include_num_graphs ? 0 : numgraphs_offset))
      .attr("y", 45)
      .style("text-anchor", "middle")
      .style("font-size", "small")
      .style("fill", "#aaa")
      .text("Original link")

  svg.append("text")
      .attr("x", 370 - (include_num_graphs ? 0 : numgraphs_offset))
      .attr("y", 45)
      .style("text-anchor", "start")
      .style("font-size", "small")
      .style("fill", "#aaa")
      .text("Origin paper / website")

  for (let c of [... new Set(collection_type)]){
    if (c == "Skip" || c == "Missed It") continue;
    // console.log(c)
    let instances = benchmark_datasets.filter(a => a["Type of Collection"] == c);
    if (c.includes("No report")) c = "Established Network Repository";

    for (let i in instances){
      svg.append("text")
        .attr("x", 200)
        .attr("y", 65 + i * y_distance)
        .style("text-anchor", "end")
        .style("font-size", "small")
        .text(instances[i]["Name"] + " ")

      if (include_num_graphs){
        svg.append("text")
          .attr("x", 240)
          .attr("y", 65 + i * y_distance)
          .style("text-anchor", "middle")
          .style("font-size", "small")
          .text(instances[i]["Number of Graphs"] + " ")
      }
      
      if (instances[i]["Originally found at"] != "" && instances[i]["Originally found at"] != undefined) {
        const xPosOff = (include_num_graphs ? 0 : numgraphs_offset);
        const yPos = (y_distance * i + 65);
        svg.append("a")
        .attr("href", instances[i]["Originally found at"])
        .attr("transform", "translate("+ (310 - xPosOff) +", " + yPos + ")")
        .attr("target", "_blank")
        .append("text")
        .text("[link]")
        .style("fill", "#88d")
        .style("font-size", "small")
        
        const paper = (paper_source.find(a => a.Name == instances[i]["Origin paper plaintext"]) || {})
        let link = ""
        if('bib' in paper){
          const res = extractDOIUrl(paper.bib)
          if (res) link = res;
        }
        
        if(link != ""){
          link = extractDOIUrl(paper.bib)
          svg.append("a")
          .attr("href", link)
          .attr("transform", "translate("+ (370 - xPosOff)+", " + yPos + ")")
          .attr("target", "_blank")
          .append("text")
          .text(instances[i]["Origin paper plaintext"].split("(")[0])
          // .style("fill", "rgb(136, 136, 221)")
          .style("fill","#1565c0")
          .style("font-size", "small")
        } else {
          // What do we do here
          svg.append("text")
          .attr("transform", "translate("+ (370 - xPosOff)+", " + yPos + ")")
          .text(instances[i]["Origin paper plaintext"].split("(")[0])
          .style("fill", "#616161")
          .style("font-size", "small")
        }
        
      }
    }
  }

  return svg.node();
}

function extractDOIUrl(bibtex) {
    // Regular expression to find the DOI within the BibTeX entry
    const doiRegex = /doi\s*=\s*{([^}]+)}/i;
    
    // Try to match the DOI in the BibTeX entry
    const match = bibtex.match(doiRegex);
    
    // Check if a DOI was found
    if (match) {
        // Return the DOI as a full URL
        return `https://doi.org/${match[1].trim()}`;
    } else {
        // Return null or an appropriate message if DOI is not found
        return null;
    }
}
```